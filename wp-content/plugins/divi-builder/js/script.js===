var intervl = '';

jQuery(document).ready(function ($) {

    $(".page-id-965 .product-name a").attr('href',"javascript:void(0)");
    $(".page-id-964 .woocommerce-order p > a").attr('href',"https://app.divibloxx.com/billing/");
    $(".page-id-964 .product-name a").attr('href',"javascript:void(0)");



    $("body").on("click", ".toggle_password", function () {
        if ($(this).hasClass("hide")) {
            $(this).removeClass("hide").addClass("show");
            $(this).html('<i class="fa fa-eye"></i>');
            $(this).parent().find("input").attr('type', 'password');
        } else {
            $(this).removeClass("show").addClass("hide");
            $(this).html('<i class="fa fa-eye-slash"></i>');
            $(this).parent().find("input").attr('type', 'text');
        }
    });



    $("body").on("click", "#closeSlideNav", function () {
        $(".builder_create_template").show();
        $(".windows-views").remove();
    });

    $("body").on("click", ".variation_views", function () {
        $(".project_details_menu li").removeClass("active");
        $(this).parent().addClass("active");

        var get_view = $(this).attr('id');
        var get_permalink = $(this).attr('data-id');
        $(".builder_create_template").hide();
        $(".windows-views").remove();
        $(".builder_create_template").after("<div class='windows-views'></div>");
        if (get_view == "desktop") {
            $(".windows-views").html('<div class="desktop-view"><div class="window-loader"><div class="diviblock-preloader"><img src="/wp-content/uploads/2021/08/appbloxx-1.png" alt="diviblocklogo" style="bottom: 50px!important;"><div class="progress-bar-s"><div class="progress"><div class="load" style="transition: width 1s ease-out 0s; width: 0%;"></div></div></div><div class="rights"><p>© 2021 <a href="https://app.divibloxx.com/" target="_blank">Bloxx</a></p></div></div></div><iframe class="desktop-view-in" src="' + get_permalink + '"></iframe></div>');

            setTimeout(function () {
                // $(".window-loader").hide();
                $(".desktop-view-in").show();
            }, 5000);
        }
        if (get_view == "tablet") {
            $(".windows-views").html('<div class="tablet-view"><div class="window-loader"><div class="diviblock-preloader"><img src="/wp-content/uploads/2021/08/appbloxx-1.png" alt="diviblocklogo" style="bottom: 50px!important;"><div class="progress-bar-s"><div class="progress"><div class="load" style="transition: width 1s ease-out 0s; width: 0%;"></div></div></div><div class="rights"><p>© 2021 <a href="https://app.divibloxx.com/" target="_blank">Bloxx</a></p></div></div></div><iframe class="tablet-view-in" src="' + get_permalink + '"></iframe></div>');
            setTimeout(function () {
                // $(".window-loader").hide();
                $(".tablet-view-in").show();
            }, 5000);
        }
        if (get_view == "mobile") {
            $(".windows-views").html('<div class="mobile-view"><div class="window-loader"><div class="diviblock-preloader"><img src="/wp-content/uploads/2021/08/appbloxx-1.png" alt="diviblocklogo" style="bottom: 50px!important;"><div class="progress-bar-s"><div class="progress"><div class="load" style="transition: width 1s ease-out 0s; width: 0%;"></div></div></div><div class="rights"><p>© 2021 <a href="https://app.divibloxx.com/" target="_blank">Bloxx</a></p></div></div></div><iframe class="mobile-view-in" src="' + get_permalink + '"></iframe></div>');
            setTimeout(function () {
                // $(".window-loader").hide();
                $(".mobile-view-in").show();
            }, 5000);
        }

        $('.window-loader .progress .load').animate({
            width: '100%'
        }, {
            duration: 5000
        });

    });
    
    
    
    //BLOXX Plugin API  KEY GENERATED
    $("body").on("click", ".create_apis", function (e) {
        e.preventDefault();

        if(api_limit==0){
            exceed_plan_limit("You've reached maximum number of API. Please purchase/upgrade your plan.");
        } else {
            var $this = $(this);
            var get_ajax=$this.html();
            
            var ajax_url = builder.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: {
                    'action': 'bloxx_generated_key'                
                },
                beforeSend: function () {
                    $this.html('<i class="fa fa-spinner fa-spin"></i>');
                },
                success: function (resp) {
                    if(resp.code==200){
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                        window.location.href="";
                    } else {
                        $this.html(get_ajax);
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $this.html(get_ajax);
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }        
    });



    $("body").on('click','#app_step_forms .purchase-bttn',function() {        
        $("#action_data").val('paid_app');
        $("#app_btn_submit").trigger('click');
    });


    $("body").on('click','#app_step_forms #app_btn_free',function(event) {
        event.preventDefault();
        $("#action_data").val('free_app');
        $("#app_btn_submit").trigger('click');
    });


    // block/unblock site callback
    $("body").on("click", ".block_site_button", function (e) {
        e.preventDefault();
        var $this = $(this);
    
        var term_id=$this.data('term_id');
        var user_id=$this.data('user_id');
        var api_key=$this.data('api_key');
        var site_url=$this.data('site_url');
        var user_action=$this.data('action');
        var redirect_url=$this.data('redirect_url');

       // alert(redirect_url);

        

        if(user_action=="block"){
            var confirm_msg= "You want to block this url?";
        } else {
            var confirm_msg= "You want to unblock this url?";
        }

        Swal.fire({
            title: 'Are you sure?',
            text: confirm_msg,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {                  
            var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    url: ajax_url,
                    dataType: "json",
                    data: {
                        'action': 'sitebloxx_block_site_callback',
                        'user_action': user_action,
                        'user_id': user_id,
                        'term_id': term_id,
                        'api_key': api_key,
                        'site_url': site_url
                    },
                    beforeSend: function () {
                       // $this.html('<i class="fa fa-spinner fa-spin"></i>');
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        if(resp.code==200 || resp.code==201){
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href=redirect_url;
                        } else {
                            //$this.html(get_text);
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                       // $this.html(get_text);
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
        
    });
    //END block/unblock



    $("body").on("click", ".user_action_api a", function (e) {
        e.preventDefault();
        var $this = $(this);
        var get_text=$this.html();
        var user_action=$this.attr('data-title');
        var action_key=$this.attr('id');

        if(user_action=="regenerate_key"){
            var confirm_msg= "You want to regenerate this API key? All existing site connections will be lost.";
        } else {
            var confirm_msg= "You want to delete this API key? All existing site connections will be lost.";
        }

        Swal.fire({
            title: 'Are you sure?',
            text: confirm_msg,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {                  
            var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    url: ajax_url,
                    dataType: "json",
                    data: {
                        'action': 'useraction_api',
                        'type': user_action,
                        'type_id': action_key
                    },
                    beforeSend: function () {
                        $this.html('<i class="fa fa-spinner fa-spin"></i>');
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        if(resp.code==200){
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href=resp.redirect_url;
                        } else {
                            $this.html(get_text);
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $this.html(get_text);
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
        
    });
    //END BLOXX PLUGIN API KEY GENERATED



    $("body").on("click", ".accordion", function (e) {
        e.preventDefault();
        var $this = $(this);
        var cats_id = $(this).attr("id");
        $(".mob_layout_selection").html('');
        $(".accordion-panel").hide();
        $(".accordion").removeClass("active");
        if ($this.hasClass('active')) {
            $("#accordion_" + cats_id).removeAttr('style');
            // $("#accordion_"+id).slideUp(350); 
            $this.removeClass('active');
            $(".builder_posts").hide();

        } else {
            var ajax_url = builder.ajax_url;
            $.ajax({
                type: "POST",
                url: 'https://app.sitebloxx.com/get-ajax/',
                data: {
                    'action': 'builder_ajax_layout',
                    'cats_id': cats_id
                },
                beforeSend: function () {
                    $("#accordion_" + cats_id).attr('style', "display:block !important;");
                    $this.addClass('active');
                    $("#accordion_" + cats_id).html('<div style="display:flex;align-items:center;justify-content:center;heigt:100%;margin-top:50px;"><i class="fa fa-spinner fa-spin fa-4x text-purple "></i></div>');
                },
                success: function (resp) {

                    $("#accordion_" + cats_id).html(resp);
                    $(".builder_posts").show();
                    sortable_layout();
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });


    $("body").on("click", ".mob-togglebar", function () {
        var id = $(this).attr("data-id");
        $(".left-category-aside").css("bottom", 0).hide();
        $(".mob-open-sidebar").removeClass('active');
        $(".builder_posts").hide();
        if ($(this).hasClass("active")) {
            $(".mob-builder-menu").attr("style", "display:none;");
            $(".mob-collapsible").attr("style", "height:50px;");
            $(this).removeClass("active");
        } else {
            $(".mob-builder-menu").attr("style", "display:flex;");
            $(".mob-collapsible").removeAttr("style");
            $(this).addClass("active");
        }

    });




    $(document).on("click", "ul.builder_categories li a.builder_cats", function () {
        var $this = $(this);
        var get_id = $this.attr('id');
        $("ul.builder_categories li a.builder_cats").removeClass('builder_cat_active');
        $(this).addClass("builder_cat_active");
        if ($(".sections_lists #cat_post_" + get_id).length == 0) {
            load_sections(get_id, $this);
        } else {
            $(".sections_lists .builder_posts").hide();
            $(".sections_lists #cat_post_" + get_id).css({
                'position': 'fixed',
                'overflow-y': 'scroll',
                'left': '360px'
            });

            $(".sections_lists #cat_post_" + get_id).show("slide", {
                direction: "left"
            }, 800);
        }
    });


    //Categories Load form ajax
    $("body").on("click", ".cats_more_load", function () {
        var $this = $(this);
        var cat_offset = $this.attr('data-offset');
        var cat_limit = $this.attr('ajax-limit');
        var total_count = $this.attr('total-counts');
        var btn_text = $this.html();
        loadfrom_cats(cat_offset, cat_limit, btn_text, total_count, $this);
    });

    function loadfrom_cats(cat_offset, cat_limit, btn_text, total_count, $this) {
        $.ajax({
            type: "POST",
            url: '/get-ajax/',
            data: {
                'action': 'cat_ajax_load',
                'cat_limit': cat_limit,
                'cat_offset': cat_offset
            },
            beforeSend: function () {
                //$("#cat_post_"+cats_id).addClass("slide_reload");
                $this.prop('disabled', true).css("pointer-events", "none");
                $this.html('Please Wait <i class="fa fa-spinner fa-spin"></i>');
            },
            success: function (resp) {
                var next_offset = parseInt(cat_limit) + parseInt(cat_offset);

                var cats_data = $(resp).filter(".projects_cats").html();

                var cats_section_data = $(resp).filter(".project_sections").html();

                $(".left-category-aside ul.builder_categories li:last").after(cats_data);

                $(".builder_desktop_sidebar section.builder_posts:last-child").after(cats_section_data);

                sortable_layout();

                setTimeout(function () {
                    $this.prop('disabled', false).css("pointer-events", "auto");
                    $this.html(btn_text);

                    var next_offset = parseInt(cat_offset) + parseInt(cat_limit);

                    $this.attr('data-offset', next_offset);

                    var live_post_count = $(".left-category-aside .builder_categories li").length;

                    if (total_count <= live_post_count) {
                        $(".load_more_cats").hide();
                    }
                }, 5000);
            },
            error: function () {
                $this.prop('disabled', false).css("pointer-events", "auto");
                $this.html(btn_text);
                console.log("Failed to load category from server");
            }
        });
    }






    //Section Load From ajax when clicked on category from sidebar

    function load_sections(cats_id, $this) {
        var cat_text = $this.html();
        var page_term = $this.attr('data-id');
        $.ajax({
            type: "POST",
            url: '/get-ajax/',
            data: {
                'action': 'section_ajax_load',
                'page_term': page_term,
                'cats_id': cats_id
            },
            beforeSend: function () {
                $this.html(cat_text + ' <i class="fa fa-spinner fa-spin"></i>');
                $(".sections_lists section").removeClass("active_slide");
                $(".sections_lists .builder_posts").hide();
            },
            success: function (resp) {
                var count_section = $(".sections_lists").find("section").length;

                if (count_section == 0) {
                    $(".sections_lists").html(resp);
                } else {
                    $(".sections_lists section:last-child").after(resp);
                }

                if (cats_id != 502 || cats_id == 176) {
                    sortable_layout();
                }

                setTimeout(function () {
                    $(".sections_lists .builder_posts").css({
                        'position': 'fixed',
                        'overflow-y': 'scroll',
                        'left': '360px'
                    });

                    $(".sections_lists .builder_posts").show("slide", {
                        direction: "left"
                    }, 800);

                    $this.html(cat_text);

                    loadmore_scroll_clicked();
                }, 500);

            },
            error: function () {
                $this.html(cat_text);
            }
        });
    }




    function loadmore_scroll_clicked() {
        $('.sections_lists .builder_posts').on('scroll', function () {
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                $(this).find(".load_more a").trigger("click");
            }
        })
    }

    // ak work
    //  $("body").on("click", ".builder_inner_dragpost .builder-dragpost .show_clone_img", function () {
    //     var cats_id = $(this).attr('data-id');
    //     var section_id = $(this).attr('id');
    //     alert('section_id=>'+section_id+' cats_id=>'+cats_id);
    //     var $this = $(this);
    //     var btn_text = $this.html();
    //     var server_pid=$this.attr('data-nm');
    //     //loadfrom_ajaxsection(cats_id, $this, btn_text, server_pid);
    // });
    // ak work end 

    $("body").on("click", ".section_more_load", function () {
        var cats_id = $(this).attr('data-id');
        var $this = $(this);
        var btn_text = $this.html();
        var server_pid=$this.attr('data-nm');
        loadfrom_ajaxsection(cats_id, $this, btn_text, server_pid);
    });


    function loadfrom_ajaxsection(cats_id, $this, btn_text, server_pid) {             //doSomething
        var section_offset = $this.attr('data-offset');
        var total_count = $this.attr('total-counts');
        $.ajax({
            type: "POST",
            url: '/get-ajax/',
            data: {
                'action': 'ajax_load_more',
                'ajax_offset': section_offset,
                'page_term': server_pid,
                'cats_id': cats_id
            },
            beforeSend: function () {
                //$("#cat_post_"+cats_id).addClass("slide_reload");
                $this.prop('disabled', true).css("pointer-events", "none");
                $this.html('Please Wait <i class="fa fa-spinner fa-spin"></i>');
            },
            success: function (resp) {
                //$("#cat_post_" + cats_id + " .builder_inner_dragpost:nth-last-child(2)").html(resp);
                $("#cat_post_" + cats_id).html(resp);
                $("#cat_post_" + cats_id + " .ajax_loader").remove();
                
                if(cats_id!=176 || cats_id!=502){
                    sortable_layout();
                }

                setTimeout(function () {
                    $this.prop('disabled', false).css("pointer-events", "auto");
                    $this.html(btn_text);
                    $("#cat_post_" + cats_id).removeClass("slide_reload");
                    $this.parent().remove();

                    var offset_count = $(".builder_posts div.load_more a").attr('data-offset');
                    if (parseInt(total_count) < parseInt(offset_count)) {
                        $(".builder_posts div.load_more").hide();
                    }
                }, 1500);

                loadmore_scroll_clicked();
            },
            error: function () {
                $("#cat_post_" + cats_id).removeClass("slide_reload");
                $this.prop('disabled', false).css("pointer-events", "auto");
                $this.html(btn_text);
                console.log("Failed to load section from server");
            }
        });
        $(".builder_posts").off('scroll');
    }




    //AJAX PAGINATION
    $("body").on("click", ".builder_posts .cats_pagination .wp-pagenavi a", function (e) {
        //$('.wp-pagenavi a').on('click', function(e){
        e.preventDefault();
        var $this = $(this);
        var cats_id = $this.parent().parent().attr('id');
        $("section.builder_posts.active_slide#cat_post_" + cats_id).html('<div class="itemLoader"><i class="fa fa-spin fa-spinner"></i></div>');
        var link = $this.attr('href');
        var href_hash = link + ' #cat_post_' + cats_id;

        $('#cat_post_' + cats_id).load(href_hash, function () {
            var ajax_html = $("section.builder_posts.active_slide#cat_post_" + cats_id + " > section").html();
            $("section.builder_posts.active_slide#cat_post_" + cats_id).html('<i class="fa fa-spin fa-spinner"></i>');
            $("section.builder_posts.active_slide#cat_post_" + cats_id).html(ajax_html);
            $('#cat_post_' + cats_id).fadeIn(500);
            sortable_layout();
        });
    });


    // Make the dashboard widgets sortable Using jquery UI
    /*$('.builder_inner_dragpost').sortable({
     placeholder: 'sort-highlight',
     forcePlaceholderSize: true,
     connectWith: '.builder_inner_dropable',
     zIndex: 999999,
     remove: function(event, ui) {
     ui.item.clone().appendTo('.builder_inner_dropable');
     $(this).sortable('cancel');
     }
     });
     
     
     $('.builder_inner_dropable').sortable({        
     connectWith: '.builder_inner_dragpost'
     });*/


    $(".wrapContent").click(function () {
        if ($(window).width() > 600) {
            $(".open-sidebar").removeClass("active");
            $(".switch-sidebar").removeClass("active");
            $("#left_project").removeAttr("style");
            $("#leftCategorySidebar").removeAttr("style");
            jQuery("#leftCategorySidebar").removeClass('sidebar-in');
            $(".builder_posts").css({
                'overflow-y': 'scroll',
                'left': '360px'
            });
            $(".builder_posts").hide();
        } else {
            //$(".mob-open-sidebar").removeClass("active");
            $(".mob-switch-sidebar").removeClass("active");
            $("#mobCategoryTabs").hide();
            $("#mobProjectTabs").hide();
        }
    });

    //   var clone, before, parent
    //     $('.mobConnectedSortable').each(function () {
    //         $(this).sortable({
    //             placeholder: 'sort-highlight',
    //             forcePlaceholderSize: true,
    //             connectWith: '.mobConnectedSortable',
    //             helper: "clone",
    //             zIndex: 999999,
    //             start: function (event, ui) {
    //                 $(".dropable_area").hide();
    //                 $(".mob-open-sidebar").removeClass("active");
    //                 $(".mob-switch-sidebar").removeClass("active");
    //                $("#mobCategoryTabs").hide();
    //            $("#mobProjectTabs").hide();              
    //                 $(".builder_posts").css({
    //                     'overflow-y':'inherit' 
    //                 }).animate({"display":"block"}, "slow"); 
    //                 //$(".builder_posts").hide("slide", {direction: "left"}, 1000);
    //                 $(ui.item).show();
    //                 clone = $(ui.item).clone();
    //                 before = $(ui.item).prev();
    //                 parent = $(ui.item).parent();
    //             },
    //             receive: function (event, ui) {//only when dropped from one to another!
    //                 $(".builder_posts").css({'overflow-y': 'scroll'});
    //                 $(".builder_posts").show();
    //                 if (before.length) before.after(clone);
    //                 else parent.prepend(clone);
    //             }
    //         }).disableSelection();
    //     });

    sortable_layout();


    function moveUp(item) {
        var prev = item.prev();
        if (prev.length == 0)
            return;
        prev.css('z-index', 999).css('position', 'relative').animate({top: item.height()}, 250);
        item.css('z-index', 1000).css('position', 'relative').animate({top: '-' + prev.height()}, 300, function () {
            prev.css('z-index', '').css('top', '').css('position', '');
            item.css('z-index', '').css('top', '').css('position', '');
            item.insertBefore(prev);
        });
    }
    function moveDown(item) {
        var next = item.next();
        if (next.length == 0)
            return;
        next.css('z-index', 999).css('position', 'relative').animate({top: '-' + item.height()}, 250);
        item.css('z-index', 1000).css('position', 'relative').animate({top: next.height()}, 300, function () {
            next.css('z-index', '').css('top', '').css('position', '');
            item.css('z-index', '').css('top', '').css('position', '');
            item.insertAfter(next);
        });
    }


    $("body").on("click", ".builder_uparrow", function () {
        var btn = $(this);
        $(".builder_layout_save").addClass("page_draft");
        moveUp(btn.parents('.card'));
    });

    $("body").on("click", ".builder_downarrow", function () {
        var btn = $(this);
        $(".builder_layout_save").addClass("page_draft");
        moveDown(btn.parents('.card'));

    });


    function sortable_layout() {
        var clone, before, parent
        $('.connectedSortable').each(function () {
            $(this).sortable({
                placeholder: 'sort-highlight',
                forcePlaceholderSize: true,
                connectWith: '.connectedSortable',
                helper: "clone",
                zIndex: 999999,
                start: function (event, ui) {
                    $(".dropable_area").hide();
                    if ($(window).width() < 760) {
                        $(".builder_posts").hide();
                        //$(".mob-open-sidebar").removeClass("active");
                        $(".mob-switch-sidebar").removeClass("active");
                        $("#mobCategoryTabs").hide();
                        $("#mobProjectTabs").hide();

                    } else {
                        $(".open-sidebar").removeClass("active");
                        $(".switch-sidebar").removeClass("active");
                        $("#leftCategorySidebar").removeAttr("style");
                        $("#leftCategorySidebar").removeClass('sidebar-in');
                        $("#left_project").removeAttr("style");
                        $(".builder_posts").css({
                            'left': '60px',
                            'overflow-y': 'inherit'
                        }).animate({
                            "display": "none"
                        }, "slow");

                    }

                    //$(".builder_posts").hide("slide", {direction: "left"}, 1000);
                    $(ui.item).show();
                    clone = $(ui.item).clone();
                    before = $(ui.item).prev();
                    parent = $(ui.item).parent();
                },
                change: function (event, ui) {
                    var get_drop_lenth = $(".builder_inner_dropable > div.card").length;
                    if (get_drop_lenth == 0) {
                        $(".dropable_area").show();
                    } else {
                        $(".dropable_area").hide();
                    }
                },
                receive: function (event, ui) { //only when dropped from one to another!

                    /*var drop_post_id = ui.item[0].childNodes[1].id;
                     var drop_position= ui.item.index();*/
                    $(".dropable_area").hide();
                    $(".builder_inner_dropable .card .action_btns").show();
                    if ($(window).width() > 600) {
                        $(".mob-open-sidebar").removeClass("active");
                        $(".mob-switch-sidebar").removeClass("active");
                        $("#mobCategoryTabs").hide();
                        $("#mobProjectTabs").hide();
                        $(".builder_posts").css({
                            'overflow-y': 'scroll',
                            'left': '360px'
                        });
                        $(".builder_posts").hide();
                    } else {
                        $(".builder_posts").css({
                            'overflow-y': 'scroll',
                            'left': '360px'
                        });
                        $(".builder_posts").hide();

                    }
                    if (before.length)
                        before.after(clone);
                    else
                        parent.prepend(clone);

                    $(".builder_layout_save").addClass("page_draft");
                    //$(".builder_inner_dropable").find(".show_clone_img").hide();
                    //$(".show_clone_html").removeClass("builder_drag_active");
                    //$(".builder_inner_dropable").find(".show_clone_html").show();

                    //$(".fixed-btn-save").show();
                    // setTimeout(function () {
                    //     var card_data = $(".builder_inner_dropable").html();
                    //     var project_title = $("#project_nm").val();
                    //     var project_id = $("#project_id").val();
                    //     var project_catid = $("#project_cat_id").val();




                    //     //Save Content while Exit
                    //     var card_data = $(".builder_inner_dropable").html();
                    //     var project_title = $("#project_nm").val();
                    //     var project_id = $("#project_id").val();
                    //     var project_catid = $("#project_cat_id").val();
                    //     var action_to_perform = $("li.builder_layout_save a,builder_layout_save a").attr('data-id');
                    //     var send_content = [];
                    //     $(".builder_inner_dropable .card .builder_layout").each(function () {
                    //         var get_content = $(this).val();
                    //         send_content.push(get_content);
                    //     });
                    //     //saveExitbuilder(project_title, project_id, project_catid, card_data, send_content, action_to_perform);




                    // }, 1000);

                    var get_drop_lenth = $(".builder_inner_dropable > div.card").length;
                    if (get_drop_lenth == 1) {
                        $(".builder_downarrow").hide();
                        $(".builder_uparrow").hide();
                    } else {
                        $(".builder_downarrow").show();
                        $(".builder_uparrow").show();
                    }
                }
            }).disableSelection();
        });
    }


    setTimeout(function () {
        var get_length = $(".builder_inner_dropable .card").length;
        if (get_length == 0) {
            $(".builder_inner_dropable .dropable_area").show();
        } else {
            $(".builder_inner_dropable .dropable_area").hide();
        }
    }, 1000);





    $(document).on("click", ".mob-open-sidebar", function () {
        $(".builder_desktop_sidebar").show();
        if ($(this).hasClass("active")) {
            $("#leftCategorySidebar").removeAttr("style");
            $(this).removeClass("active");
            $(".builder_posts").css({
                'overflow-y': 'scroll',
                'left': '0'
            });
            $(".builder_posts").hide();
        } else {
            //$("#leftCategorySidebar").attr("style", "width:150px");
            $("#leftCategorySidebar").attr("style", "bottom:78px");
            $(this).addClass("active");
        }

    });

    $("body").on("click", ".mob-switch-sidebar", function () {
        $(".mob-open-sidebar.active").trigger("click");
        if ($(this).hasClass("active")) {
            $("#mobProjectTabs").attr("style", "display:none;");
            $(this).removeClass("active");
        } else {
            $("#mobProjectTabs").attr("style", "display:block;");
            $(this).addClass("active");
        }

    });

    $("body").on("click", ".switch-sidebar", function () {
        $(".open-sidebar.active").trigger("click");
        if ($(this).hasClass("active")) {
            $("#left_project").removeAttr("style");
            $(this).removeClass("active");
        } else {
            $("#left_project").attr("style", "left:60px");
            $(this).addClass("active");
        }

    });




    /*if (screen.width < 601) {
     $(".builder_mobile_sidebar").show();
     $(".builder_desktop_sidebar").hide();
     } else {
     $(".builder_desktop_sidebar").show();
     $(".builder_mobile_sidebar").hide();
     }*/
    //End Left to slider


    $("li.builder_layout_exit .exit_builder").click(function () {
        var $this = $(this);
        var prev_section_length = $("#section_count_default").val();
        var default_array = prev_section_length.split(',');

        var ask_for_save = 0;

        var send_content = [];
        $(".builder_inner_dropable .card > .builder-dragpost").each(function () {
            var get_content = $(this).attr('id')
            send_content.push(get_content);
        });



        jQuery.grep(send_content, function (el) {
            if (jQuery.inArray(el, default_array) == -1) {
                ask_for_save = 1;
            }
        });

        jQuery.grep(default_array, function (el) {
            if (jQuery.inArray(el, send_content) == -1) {
                ask_for_save = 1;
            }
        });




        if (ask_for_save == 1) {
            Swal.fire({
                title: 'Exit Without Saving?',
                icon: 'warning',
                showCancelButton: true,
                showDenyButton: true,
                confirmButtonColor: '#000',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Save & Exit',
                denyButtonText: `Exit Without Saving`,
                cancelButtonText: "Go Back",
            }).then((result) => {

                if (result.isConfirmed) {
                    var href_link = $this.attr('data-id');

                    $this.html('<i class="fa fa-spinner fa-spin"></i>');

                    //Save Content while Exit
                    var card_data = $(".builder_inner_dropable").html();
                    var project_title = $("#project_nm").val();
                    var project_id = $("#project_id").val();
                    var project_catid = $("#project_cat_id").val();
                    var action_to_perform = $("li.builder_layout_save a,builder_layout_save a").attr('data-id');
                    var send_content = [];
                    $(".builder_inner_dropable .card .builder_layout").each(function () {
                        var get_content = $(this).val();
                        send_content.push(get_content);
                    });
                    saveExit(project_title, project_id, project_catid, card_data, send_content, action_to_perform);
                    //End Save Content while Exit

                    window.location.href = href_link;

                } else if (result.isDenied) {
                    var href_link = $this.attr('data-id');
                    $this.html('<i class="fa fa-spinner fa-spin"></i>');
                    window.location.href = href_link;
                }
            });
        } else {
            var href_link = $this.attr('data-id');
            $this.html('<i class="fa fa-spinner fa-spin"></i>');
            window.location.href = href_link;
        }
    });


    function saveExit(project_title, project_id, project_catid, card_data, send_content, action_to_perform) {
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'saveproject',
                builder_prj_title: project_title,
                builder_prj_id: project_id,
                builder_cat_id: project_catid,
                card_detail: card_data,
                json_content: send_content,
                action_to_perform: action_to_perform
            },
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                console.log(resp);
            }
        });
    }



    function saveExitbuilder(project_title, project_id, project_catid, card_data, send_content, action_to_perform) {
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'saveproject',
                builder_prj_title: project_title,
                builder_prj_id: project_id,
                builder_cat_id: project_catid,
                card_detail: card_data,
                json_content: send_content,
                action_to_perform: action_to_perform
            },
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                load_css(project_id);
            }
        });
    }



    function load_css(project_id) {
        //Load Css
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            url: ajax_url,
            dataType: "json",
            data: {
                'action': 'et_builder_load_css',
                'page_id': project_id
            },
            beforeSend: function () {
                $("ul.left-list .open-sidebar").addClass("slide_reload");
            },
            success: function (resp) {
                if (resp.code == 200) {
                    $("#divi-dynamic-critical-inline-css").remove();
                    $("#divi-custom-script-js-extra").remove();
                    $("#et-builder-module-design-" + project_id + "-cached-inline-styles").remove();

                    var page_data = resp.page_html;

                    var divi_critical_css = $(page_data).filter("style#divi-dynamic-critical-inline-css").html();
                    var divi_dynamic_css_link = $(page_data).filter("#divi-dynamic-css").attr("href");
                    var divi_defferd_cache_css = $(page_data).filter("#et-builder-module-design-" + project_id + "-cached-inline-styles").html();

                    var divi_custom_scriptjs_extra = $(page_data).filter("#divi-custom-script-js-extra").html();
                    var easypiechartjs = $(page_data).filter("#easypiechart-js").attr("src");
                    var divi_custom_scriptjs = $(page_data).filter("#divi-custom-script-js").attr("src");



                    //$("#et-builder-module-design-deferred-"+project_id+"-cached-inline-styles").remove();                    
                    //$("style#divi-dynamic-critical-inline-css").remove();
                    //$('head').append("<style id='divi-dynamic-critical-inline-css' type='text/css'>"+divi_critical_css+"</style>");

                    var append_id = "et-builder-module-design-" + project_id + "-cached-inline-styles";


                    $('body').append("<style id='" + append_id + "' type='text/css'>" + divi_defferd_cache_css + "</style>");


                    $('body').append("<script type='text/javascript' id='divi-custom-script-js-extra'>" + divi_custom_scriptjs_extra + "</script>");
                    eval($("#divi-custom-script-js-extra").text());

                    //$("style#divi-dynamic-critical-inline-css").html(divi_critical_css);
                    $('head').append("<style id='divi-dynamic-critical-inline-css' type='text/css'>" + divi_critical_css + "</style>");

                    $("#divi-dynamic-css").attr("href", divi_dynamic_css_link);
                    ///var defferd_id="et-builder-module-design-"+project_id+"-cached-inline-styles";
                    var html_array = new Array();

                    $(resp.page_html).find(".et-boc").find(".et_pb_section").each(function (k, v) {
                        html_array.push(v);
                    });
                    
                    
                    
                    var w = 0;
                    var clonehtml = "";
                    $(".builder_inner_dropable .card").each(function () {
                        clonehtml = "<div id='et-boc' class='et-boc'><div class='et-l et-l--post'><div class='et_builder_inner_content et_pb_gutters3'>";
                        clonehtml += html_array[w].outerHTML;
                        clonehtml += "</div></div></div>";
                        $(this).find(".show_clone_html").html(clonehtml);
                        w++;
                    });

                    $(".builder_inner_dropable").find(".show_clone_img").hide();
                    $(".builder_inner_dropable").find(".show_clone_html").show();
                    $(".builder_inner_dropable .card .builder_remove_layout").show();
                    $("ul.left-list .open-sidebar").removeClass("slide_reload");
                    $(".builder_layout_save").removeClass("page_draft");

                    window.et_pb_init_modules();
                    setTimeout(function () {
                        Swal.fire({
                            title: "Page Published!",
                            text: "You can now see the live code and edit it with Divi builder",
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                        $("li.builder_layout_save a").html("<img src='/wp-content/plugins/divi-builder/images/floppy-icon.png' alt='Save'>Publish");
                    }, 1500);
                }
            }, error: function () {
                $("ul.left-list .open-sidebar").removeClass("slide_reload");
                $(".builder_layout_save").removeClass("page_draft");
                $(".builder_inner_dropable .card a.builder_remove_layout").show();
                swal.close();
                console.log("Failed");
            }

        });
    }


    $("li.builder_live_preview .preview_data").click(function () {
        var $this = $(this);
        var get_html = $this.html();
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var send_content = [];
        $(".builder_inner_dropable .card .builder_layout").each(function () {
            var get_content = $(this).val();
            send_content.push(get_content);
        });
        var ajax_url = builder.ajax_url;
        var term_id = $this.attr('id');
        var page_id = $this.attr('data-id');

        var cookieValue = $.cookie("layout_id");
        if (cookieValue === undefined || cookieValue === null) {
            cookieValue = "no";
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'builder_liveprev',
                layout_id: cookieValue,
                json_content: send_content,
                project_id: term_id,
                page_id: page_id
            },
            success: function (resp) {
                $this.html('<i class="fa fa-eye"></i>');
                if (resp.code == 200) {
                    $.cookie("layout_id", resp.layout_id);
                    //$("#builder_preview_modal #preview_html").load(resp.preview_url);
                    //$("#builder_preview_modal").show();
                    $this.html(get_html);
                    window.open(resp.preview_url, '_blank');
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html(get_html);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });


    $("body").on("click", ".preview_close", function () {
        $("#builder_preview_modal #preview_html").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:26px"></i>');
        $("#builder_preview_modal").hide();
        $("#left-area #template_table_wrapper #template_table_wrapper div#template_table_info").hide();
        $("#left-area #template_table_wrapper #template_table_wrapper div#template_table_paginate").hide();
    });




    $("li.builder_export_json .export_json").click(function () {
        $(this).html('<i class="fa fa-spinner fa-spin"></i>')
        var send_content = [];
        $(".builder_inner_dropable .card .builder_layout").each(function () {
            var get_content = $(this).val();
            send_content.push(get_content);
        });
        var ajax_url = builder.ajax_url;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'exportjson',
                json_content: send_content
            },
            success: function (resp) {
                $("li.builder_export_json .export_json").html('<i class="fa fa-download"></i>');
                if (resp.code == 200) {
                    $(".click_download").attr('href', resp.file_path);
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    $("li.builder_export_json .click_download")[0].click();
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("li.builder_export_json .export_json").html('<i class="fa fa-download"></i>');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });


    $("li.builder_layout_save a,builder_layout_save a").click(function () {
        var get_html = $(this).html();
        var action_to_perform = $(this).attr('data-id');
        $(this).html('<i class="fa fa-spinner fa-spin"></i>');
        var send_content = [];

        $(".builder_inner_dropable .card .builder_layout").each(function () {
            var get_content = $(this).val();
            send_content.push(get_content);
        });


        var card_data = $(".builder_inner_dropable").html();
        var project_title = $("#project_nm").val();
        var project_id = $("#project_id").val();
        var project_catid = $("#project_cat_id").val();
        var ajax_url = builder.ajax_url;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'saveproject',
                builder_prj_title: project_title,
                builder_prj_id: project_id,
                builder_cat_id: project_catid,
                card_detail: card_data,
                json_content: send_content,
                action_to_perform: action_to_perform
            },
            success: function (resp) {
                var site_url = $(".page_edit_url").attr('id');
                //$("li.builder_layout_save a").html(get_html);


                if (resp.code == 200) {
                    $("#project_id").val(resp.project_id);
                    $(".project_detail_nm").show();

                    var changed_array = [];
                    $(".builder_inner_dropable .card > .builder-dragpost").each(function () {
                        var get_content = $(this).attr('id')
                        changed_array.push(get_content);
                    });
                    $("#section_count_default").val(changed_array);
                    $(".fixed-btn-save").hide();

                    load_css(project_id);



//                    if (action_to_perform == "create") {
//                        var site_url = $(".page_edit_url").attr('id');
//                        var edit_url = site_url + "/edit-page-builder?pid=" + resp.project_id + "&pnm=" + project_title + "&pcat=" + resp.project_cat_id + "&update=1";
//                        window.location.href = edit_url;
//                    }
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                var site_url = $(".page_edit_url").attr('id');
                $("li.builder_layout_save a").html(get_html);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });

    //Start Permission Modal
    $("body").on("click", ".permission_modal", function () {
        $(".project_permission_modal").addClass('model-open');
    });
    //End Permission Modal

    //Start Invitre Collaborator Modal
    $("body").on("click", ".invite_collaborator", function () {
        $(".collaborators_invite_modal").addClass('model-open');
    });
    //End Invitre Collaborator Modal

    $("a.editcview").click(function () {

        $(this).html('EDIT PAGE <i class="fa fa-spinner fa-spin"></i>')
        var send_content = [];
        $(".builder_inner_dropable .card .builder_layout").each(function () {
            var get_content = $(this).val();
            send_content.push(get_content);
        });

        var get_href = $(this).data("href");

        var card_data = $(".builder_inner_dropable").html();
        var project_title = $("#project_nm").val();
        var project_id = $("#project_id").val();
        var project_catid = $("#project_cat_id").val();
        var ajax_url = builder.ajax_url;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'saveproject',
                builder_prj_title: project_title,
                builder_prj_id: project_id,
                builder_cat_id: project_catid,
                card_detail: card_data,
                json_content: send_content,
                action_to_perform: "update"
            },
            success: function (resp) {
                window.location.href = get_href;
            },
            error: function () {

            }
        });
    });


    $("body").on("click", ".close", function () {
        $(".modal").hide();
    });

    $(document).on("click", "a.builder_remove_layout", function (e) {
        //alert(1);
        var $this = $(this);
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to delete this",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $(".builder_layout_save").addClass("page_draft");
                $($this).parent().parent().remove();
                $(".fixed-btn-save").show();
                //get count of item when deleted
                /*var changed_array=[];
                 $(".builder_inner_dropable .card > .builder-dragpost").each(function(){
                 var get_content=$(this).attr('id')
                 changed_array.push(get_content);
                 });                                 
                 $("#section_count_default").val(changed_array);*/
                //End get count of item when deleted

                var get_drop_lenth = $(".builder_inner_dropable > div.card").length;
                if (get_drop_lenth == 0) {
                    $(".builder_inner_dropable").html('<div class="dropable_area ui-sortable-handle"><h1>Start by dragging a section here</h1></div>');
                } else if (get_drop_lenth == 1) {
                    $(".builder_downarrow").hide();
                    $(".builder_uparrow").hide();
                } else {
                    $(".builder_downarrow").show();
                    $(".builder_uparrow").show();
                }
            }
        });
        e.preventDefault();
    });


    //Add New Layout
    var buildersidebar_title = $(".sidebar_top_menus .builder_page a").attr('title');
    $(".sidebar_top_menus .builder_page a").attr('data-id', buildersidebar_title);
    $(".sidebar_top_menus .builder_page a").attr('title', 'Page Builder');

    //     $("body").on("click", ".builder_page a#add_page_restriction", function(e){
    //    e.preventDefault();
    //         //alert("daaa");
    //         var new_layout_url=$(this).attr('data-id');

    //         if(new_layout_url == undefined || new_layout_url == '') {

    //             Swal.fire({
    //                 title: "Error!", 
    //                 text: "You've reached maximum number of projects 1. Please upgrade your plan.",
    //                 confirmButtonColor: '#f27474',
    //                 confirmButtonText: 'Upgrade',
    //                 showCancelButton: true,
    //                 icon: "error"
    //             }).then((result) => {
    //               /* Read more about isConfirmed, isDenied below */
    //               if (result.isConfirmed) {
    //                 window.location = '/plans/';
    //             } else if (result.isDenied) {
    //                 swal.close();
    //             }
    //         });

    //         } else {
    //             $(this).html('<i class="fa fa-spinner fa-spin"></i>');
    //             window.location.href=new_layout_url;
    //         }
    //     });

    if ($('.builder_fa_duplicate').length > 0) {
        $('.builder_fa_duplicate').click(function (e) {
            e.preventDefault();
            var $this=$(this);
            var post_id = $(this).data('id');
            var cat_id = $(this).attr('data-value');

            if (post_id == undefined || post_id == '') {
                Swal.fire({
                    title: "Error!",
                    text: "You've reached maximum number of projects 1. Please upgrade your plan.",
                    confirmButtonColor: '#f27474',
                    confirmButtonText: 'Upgrade',
                    showCancelButton: true,
                    icon: "error"
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        window.location = '/plans/';
                    } else if (result.isDenied) {
                        swal.close();
                    }
                });

            } else if (cat_id == undefined || cat_id == '') {
                Swal.fire({
                    title: "Error!",
                    text: "No Category found, Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            } else {
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        action: 'duplicate_content',
                        id: post_id,
                        cat_id: cat_id
                    },

                    beforeSend: function () {
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        $("#clone_" + post_id).html('<i class="fa fa-clone"></i> Duplicate');
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            sync_page_function(cat_id, $this); 
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $("#clone_" + post_id).html('<i class="fa fa-clone"></i> Duplicate');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            } //end else
        });
    }

    function shareUrl(url) {
        if (navigator.share) {
            navigator.share({
                title: "Preview",
                text: 'Project Page Preview',
                url: url,
            });
        } else {
            return 1;
        }
    }

    $(".share-page").click(function () {
        var url = $(this).attr('data-id');
        if ($(window).width() > 600) {
            var $temp = $("<input>");
            $("body").append($temp);
            $temp.val(url).select();
            document.execCommand("copy");
            $temp.remove();
        } else {
            shareUrl(url);
        }

    });
    
    
    $("body").on("click", ".copy-btn", function () {    
        var keyid = $(this).attr('id');
        var generated_key = $(this).attr('data-id');
        var $temp = $("<input>");
        $("body").append($temp);
        $temp.val(generated_key).select();
        document.execCommand("copy");
        $temp.remove();
        $("#alert_"+keyid).show();
        setTimeout(function(){
            $(".copyAlert").fadeOut("slow");
        }, 2000);
    });


    $('.builder_fa_preview a').click(function (e) {
        e.preventDefault();
        $(this).html('<i class="fa fa-spinner fa-spin"></i>');
        var view_url = $(this).attr('data-id');
        var view_id = $(this).parent().attr('data-id');
        $("#builder_preview_modal").show();
        $(this).html('<i class="fa fa-eye"></i>');
        var preview_url = view_url;
        $("#builder_preview_modal #preview_html").load(preview_url);
    });




    //Sync Tool JS   



    $(document).on("click", ".bloxx_hosting", function (e) {
        e.stopPropagation();
        if (jQuery(".modal-backdrop").length > 0) {
            jQuery(".modal-backdrop").remove();
        }
        $("#sync_step1 .modal-header #page_nm").html("Step 3");
        var $this = $(this);
        var get_html = $this.html();
        // var get_cats = $("#siteblox_used_termid").val();
        // var server_id = $this.attr('data-id');
        // var plan = $this.attr('data-name');

        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                // cats_id: get_cats,
                // server_id: server_id,
                // plan: plan,
                action: 'create_bloxx_app' //Sitebloxx app Plugin
            },
            beforeSend: function () {
                $("#sync_step1 .closebtn").hide();
                $("#sync_step1 .hosting_steps").hide();
                $("#sync_step1 .importBox").hide();
                $("#sync_step1 .next_steps").show();
                $(".next_steps #sync_bloxx_message").show();
                $(".sync_hosting_details").hide();
                $(".sync_hosting_details").html('');
                $(".next_steps #sync_bloxx_message").html('Installing App <i class="fa fa-spinner fa-spin"></i>');
            },
            success: function (resp) {
                $this.html(get_html);
                if (resp.code == 200) {
                    // $("#siteblox_used_termid").val(resp.term_id);
                    $(".next_steps #sync_bloxx_message").show();
                    $(".next_steps #sync_bloxx_message").html('Configuring App <i class="fa fa-spinner fa-spin"></i>');

                    $("#sync_tool_modal").hide();

                    Swal.fire({
                        title: "Success!",
                        text: "App will take 2-3 minutes to complete",
                        confirmButtonColor: '#000',
                        icon: "warning"
                    });
                    setTimeout(function () {
                        window.location.href = window.location.origin;
                    }, 2000);
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html(get_html);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });


        // intervl = setInterval(function() {
        //     checkappstatus();
        // }, 30000);

    });




    function checkappstatus(get_cats) {
        var get_cats = $("#siteblox_used_termid").val();
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState == XMLHttpRequest.DONE) {
                if (xhr.responseText.replace(/\s+/g, '') == 'completed') {
                    clearInterval(intervl);
                    $(".next_steps #sync_bloxx_message").html('Please wait... <i class="fa fa-spinner fa-spin"></i>');

                    setTimeout(function () {
                        finalize_function();
                    }, 2000);
                }
            }
        }
        xhr.open('GET', bloxx.ajax_url + '?action=application_status&cats_id=' + get_cats, true);
        xhr.send(null);
    }



    function finalize_function() {
        var cats_id = $("#siteblox_used_termid").val();
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'bloxx_plugin_process', //assets/addons/sync_plugin.php
                'cats_id': cats_id
            },
            beforeSend: function () {
                $(".next_steps #sync_bloxx_message").html('Finalizing Settings <i class="fa fa-spinner fa-spin"></i>');
            },
            success: function (resp) {
                if (resp.code == 200) {
                    $("#sync_tool_modal").show();
                    $(".next_steps #sync_bloxx_message").html("All Done!");
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.href = window.location.origin;
                } else {
                    $(".next_steps #sync_bloxx_message").html("App Created. Please contact support");
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                // $this.html(get_html);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    }


    $(".siteblox_term_connect").click(function () {
        var get_term_id = $(this).attr('id');
        $("#siteblox_used_termid").val(get_term_id);
        $("#sync_tool_modal #sync_step3").hide();
        $("#sync_tool_modal #sync_step2").hide();
        $("#sync_tool_modal #sync_step1").fadeIn("slow");

        $("#sync_tool_modal").show();
    });

    $(".builder_cats a#disconnect_sync_tool").click(function () {
        var $this = $(this);
        var sync_key = $(this).attr('data-id');
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'builder_sync_disconnect',
                sync_key: sync_key
            },
            success: function (resp) {
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.href = '';
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html('&nbsp;&nbsp;Disconnect Sync');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });


    $("body").on("click", "#sync_tool_step1", function () {
        $("#sync_tool_modal #sync_step3").hide();
        $("#sync_tool_modal #sync_step2").fadeIn("slow");
        $("#sync_tool_modal #sync_step1").hide();
    });


    $("body").on("click", ".bckbtn", function () {
        var get_step = $(this).attr('id');
        $("#sync_tool_modal #sync_step3").hide();
        $("#sync_tool_modal #sync_step2").hide();
        $("#sync_tool_modal #sync_step1").hide();
        $("#sync_tool_modal #sync_step" + get_step).fadeIn("slow")
    });


    $("body").on("click", "#sync_tool_modal #sync_tool_step2", function () {
        $this = $(this);
        var connect_term = $("#siteblox_used_termid").val();
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'siteblox_key_gen',
                term_connect: connect_term
            },
            success: function (resp) {
                $this.html('Okay, I installed it');
                if (resp.code == 200) {
                    /*Swal.fire({
                     title: "Success!", 
                     text: resp.message,
                     confirmButtonColor: '#000', 
                     icon: "success"
                     });*/
                    $("#sync_tool_modal #sync_step1").hide();
                    $("#sync_tool_modal #sync_step2").hide();
                    $("#sync_tool_modal #sync_step3").fadeIn("slow");

                    $("#sync_tool_modal #gen_key").attr('data-id', resp.sitebox_key).html(resp.sitebox_key);

                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html('Okay, I installed it');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });

    $("body").on("click", "#sync_tool_modal #sync_verify", function () {
        var get_siteblox_key = $("#sync_tool_modal #gen_key").attr('data-id');
        var get_page_url = $("#page_edit_url").attr('id');
        $this = $(this);
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'siteblox_key_verify',
                siteblox_key: get_siteblox_key,
            },
            success: function (resp) {
                $this.html('Verify');
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    $("#sync_tool_modal").hide();
                    window.location.href = '';
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html('Verify');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });




    $(".builder_loggedin_area .builder_input input").keyup(function () {
        var get_length = $(this).val().length;
        if (get_length == 0) {
            $(this).parent().find('.span_error').show();
        } else {
            $(this).parent().find('.span_error').hide();
        }
    });


    $(".builder_loggedin_area").submit(function (event) {
        event.preventDefault();

        var err = 0;
        $(".builder_loggedin_area .span_error").hide();
        $(".builder_loggedin_area .builder_input input").each(function () {
            var get_length = $(this).val().length;
            if (get_length == 0) {
                err++;
                $(this).parent().find('.span_error').show();
            }
        });

        if (err == 0) {
            $(".builder_loggedin_area button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
            var ajax_url = builder.ajax_url;
            $.ajax({
                type: "POST",
                dataType: "json",
                url: ajax_url,
                data: $('.builder_loggedin_area').serialize(),
                success: function (resp) {
                    $(".builder_loggedin_area button").html('Login');
                    if (resp.code == 200) {
                        $(".syncBox").hide();
                        $("#builder_api_id").val(resp.server_userid);
                        $("#builder_api_name").html('Hi ' + resp.server_usernm + ', You can sync page with one click');
                        $(".builder_direct_import").fadeIn("slow");
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $(".builder_loggedin_area button").html('Login');
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });



    $("#domain_managment").submit(function (event) {
        event.preventDefault();
        $("#domain_managment button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('#domain_managment').serialize(),
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                $("#domain_managment button").html('Save Changes');
                if (resp.code == 200) {
                    $("#domain_managment")[0].reset();
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.href = "";
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#domain_managment button").html('Save Changes');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });

    $("#subdomain_managment").submit(function (event) {
        event.preventDefault();
        if ($("#subdomain_managment input[name=domain]").val().indexOf("http") > -1 || $("#subdomain_managment input[name=domain]").val().indexOf("www") > -1) {
            Swal.fire({
                title: "Error!",
                text: 'Enter domain without http or www.',
                confirmButtonColor: '#000',
                icon: "error"
            });
            return false;
        }
        var alldomains = '';
        if ($(".makeprimary_btn").length > 0) {
            for (var m = 0; m < $(".makeprimary_btn").length; m++) {
                alldomains += $(".makeprimary_btn").eq(m).clone().children().remove().end().text().trim() + ',';
            }
        }

        if (alldomains != '') {
            $("#subdomain_managment input[name=domain]").val(alldomains + $("#subdomain_managment input[name=domain]").val());
        }
        $("#subdomain_managment button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('#subdomain_managment').serialize(),
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                $("#subdomain_managment button").html('Save Changes');
                if (resp.code == 200) {
                    $("#subdomain_managment")[0].reset();
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#subdomain_managment button").html('Save Changes');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });

    $(document).on('click', '.makeprimary_btn', function () {
        $("#domain_managment input[name=domain]").val($(this).clone().children().remove().end().text().trim());
        $("#domain_managment button").trigger('click');
    });

    $("#backup_managment").submit(function (event) {
        event.preventDefault();
        $("#backup_managment button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var ajax_url = builder.ajax_url;
        var server_id = $("#appserver_id").val();
        var app_id = $("#apk_id").val();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('#backup_managment').serialize(),
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                $("#backup_managment button").html('Take Backup Now');
                if (resp.code == 200) {
                    restore_refreshed(app_id, server_id);
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#backup_managment button").html('Take Backup Now');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });



    $("#bckup_restore").submit(function (event) {
        event.preventDefault();
        var backup_res = $("#backup_restore").val();
        if (backup_res == "") {
            Swal.fire({
                title: "Error!",
                text: "Please select a restore point.",
                confirmButtonColor: '#000',
                icon: "error"
            });
        } else {
            $("#bckup_restore button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
            var ajax_url = builder.ajax_url;
            $.ajax({
                type: "POST",
                dataType: "json",
                url: ajax_url,
                data: $('#bckup_restore').serialize(),
                beforeSend: function () {
                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    $("#bckup_restore button").html('Restore Application Now');
                    if (resp.code == 200) {
                        $("#bckup_restore")[0].reset();
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#bckup_restore button").html('Restore Application Now');
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }

    });


    $(document).on('click', '.user_actions #bckandrest', function (e) {
        var app_id = $(this).attr('data-id');
        var server_id = $(this).attr('data-name');
        restore_refreshed(app_id, server_id);
    });

    function restore_refreshed(app_id, server_id) {
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                'server_id': server_id,
                'app_id': app_id,
                'action': 'backup-restore'
            },
            beforeSend: function () {
                $(".loader_load").show();
                $("#backup_restore").html('<option value="">Select</option>');
            },
            success: function (resp) {
                $(".loader_load").hide();
                if (resp.code == 200) {
                    $.each(resp.options, function (k, v) {
                        $("#backup_restore").append("<option value='" + v + "'>" + v + "</option>")
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $(".loader_load").hide();
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    }



    $("#ssl_management").submit(function (event) {
        event.preventDefault();
        
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('#ssl_management').serialize(),
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                $("#ssl_management button[type=submit]").html('Save Changes');
                if (resp.code == 200) {
                    $('#ssl_management')[0].reset();
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#ssl_management button[type=submit]").html('Save Changes');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });


    $(".builder_direct_transfer").click(function () {
        var $this = $(this);
        var post_id = $this.attr('data-id');
        var pcat = $this.attr('data-title');
        var server_id = $this.attr('id');
        $this.html('<i class="fa fa-spinner fa-spin"></i> Sync Page');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'builder_sync_request',
                server_userid: server_id,
                project_id: post_id,
                pcat: pcat
            },
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                $this.html('<i class="fa fa-refresh"></i> Sync Page');
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html('<i class="fa fa-refresh"></i> Sync Page');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });

    //Sync Disconnect
    $("body").on("click", ".siteblox_term_disconnect", function () {
        var $this = $(this);
        var get_html = $(this).html();
        var disconnect_nm = $this.attr('data-name');
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to Disconnect " + disconnect_nm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                $this.html('<i class="fa fa-spinner fa-spin"></i>');
                var project_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        action: 'builder_sync_disconnect',
                        project_id: project_id
                    },
                    success: function (resp) {
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });

                            window.location.href = '';
                        }
                    },
                    error: function () {
                        $(".sync_builder #syncing_" + post_id).html(get_html);
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });


    $("body").on("click", ".sync_assign_request", function () {
        var $this = $(this);
        var term_id = $this.attr('id');
        var assign_type = $this.attr('data-id');
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'sitebloxsinc_headerfooter',
                assign_type: assign_type,
                pcat: term_id
            },
            success: function (resp) {
                $this.html('<i class="fa fa-refresh"></i>');
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.html('<i class="fa fa-refresh"></i>');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });

    //Add Project From page Builder
    $(".builder_addproject").click(function () {
        $(".project_builder_form").slideToggle("slow");
        $(this).toggleClass("active");

        if ($(this).text() == "Add Project") {
            $(".project_builder_form input").val('');
            $(this).text("Hide Project Form");
        } else {
            $(".project_builder_form input").val('-1');
            $(this).text("Add Project");
        }
    });

    $(".builder_create_page_content").submit(function (event) {
        event.preventDefault();

        var err = 0;
        var b_pagnm = $(".builder_create_page_content #builder_pagenm").val();
        var cat_nm = $(".builder_create_page_content #project_catnm").val();

        if (cat_nm == -1) {
            var selected_cat = $(".builder_create_page_content #builder_pagecat").val();
            $("#project_nm").val(b_pagnm);
            $("#project_cat_id").val(selected_cat);
            $("#newcat_assign").val('yes');
            $("#myModal").hide();
        } else {
            var pid_add = $(".builder_create_page_content .project_builder_form input").val();
            if (pid_add == -1) {
                var builder_pagenm = $("#builder_pagenm").val();
                $("#project_nm").val(builder_pagenm);
                $("#prdlayout_nm").html("Project Name: " + builder_pagenm);
            } else {
                $(".builder_create_page_content button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: builder.ajax_url,
                    data: $('.builder_create_page_content').serialize(),
                    success: function (resp) {
                        $(".builder_create_page_content button").html('Add Page');
                        if (resp.code == 200) {
                            $("#project_nm").val(b_pagnm);
                            $("#project_cat_id").val(resp.pid);
                            $("#newcat_assign").val('yes');
                            $("#myModal").hide();
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $(".builder_create_page_content button").html('Add Page');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        }
    });


    //My Blox Library Saved in Template Page JS

    $(".builder_template_tabs .tabMenu").click(function () {
        $(".builder_template_section").hide();
        $(".builder_template_tabs .tabMenu").removeClass('active');
        $(this).addClass('active');
        var display_tab = $(this).attr('id');
        $("#tab_" + display_tab).fadeIn("slow");
    });

    $(".show_builder_import").click(function () {
        $(".builder_import_section").slideToggle("slow");
        $(this).toggleClass("active");

        if ($(this).text() == "Import Now")
            $(this).text("Import Later")
        else
            $(this).text("Import Now");
    });


    // JS FOR IMPORT SECTIONS



    var drop = jQuery("input");
    drop.on('dragenter', function (e) {
        jQuery(".cont").css({
            "color": "#09f"
        });
    }).on('dragleave dragend mouseout drop', function (e) {
        jQuery(".cont").css({
            "color": "#8E99A5"
        });
    });

    // FETCH ALL THE CATEGORIES OF SECTIONS 

    function fetch_categories() {
        $.ajax({
            type: "POST",
            dataType: "json",
            url: builder.ajax_url,
            data: {
                action: "fetch_categories"
            },
            success: function (resp) {
                console.log(resp);

            },
            error: function () {
                console.log("error")
            }
        });
    }

    function handleFileSelect(evt) {
        var files = evt.target.files;
        $(".chascrren").html('Wait, Uploading <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var output = [];
        var vcdata = $.parseJSON(cat_list);
        $.each(vcdata, function (key, value) {
            output.push('<option value="' + key + '">' + value + '</option>');
        });

        var dropdownlist = output.join('');
        for (var i = 0, f; f = files[i]; i++) {
            var reader = new FileReader();
            var ext = f.name.split(".");
            ext = ext[ext.length - 1].toLowerCase();
            var arrayExtensions = ["json"];

            if (arrayExtensions.lastIndexOf(ext) == -1) {
                alert("Wrong extension type.");
                return false;
            }

            if (count > 10) {
                alert("only 10 files allowed");
                return false;
            }

            reader.onload = (function (theFile) {
                return function (e) {
                    var span = '<tr class="2"><td>' + theFile.name + '</td><td><input required type="text" name="title[' + count + ']"></td><td></td><td><select class="pc" name=project_category[' + count + ']>' + dropdownlist + '</select></td></tr>';
                    count++;
                    $("#list_section_page table").append(span).show();
                };
            })(f);
            reader.readAsDataURL(f);
        }


        var response;

        var fd = new FormData($(".builder_import")[0]);
        var filess = $('#files')[0].files;
        fd.append('files', filess);
        fd.delete("action");
        fd.append('action', 'builder_create_section_preview');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            async: false,
            dataType: "html",
            url: ajax_url,
            data: fd,
            contentType: false,
            processData: false,
            success: function (resp) {
                response = resp.trim();
                $(".inner_wrap_iframe iframe").attr("src", "https://cloud.neosbuilder.com/import_page/?id=" + response);
                var iFrameID = document.getElementById('dd');
                iFrameID.height = "";
                iFrameID.height = iFrameID.contentWindow.document.body.scrollHeight + "px";
                $(".inner_wrap_iframe").hide();
                $('#list_section_page').show();
                $('#step1_page').hide();
            },
            error: function () {

            }
        });

    }

    var count = 0;
    $('#files').change(handleFileSelect);



    $(".builder_import").submit(function (event) {
        event.preventDefault();
        // if ($("#list_section table").is(":hidden")) {
        //     return false;
        // }

        $(".builder_import .span_error").hide();
        $(".builder_import button").html('Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var formData = new FormData($(".builder_import")[0]);
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: formData,
            contentType: false,
            processData: false,
            success: function (resp) {
                $(".builder_import button").html('Import');
                console.log(resp);
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.href = "";
                }else if (resp.code == 201) {
                    exceed_plan_limit(resp.message)
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $(".builder_import button").html('Import');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });



    $(".builder_library_insert a").click(function () {
        var project_id = $("#project_id").val();
        $(this).html('Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var ajax_url = builder.ajax_url;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'builder_blox_saved',
                project_id: project_id
            },
            success: function (resp) {
                $(".builder_library_insert a").html('<i class="fa fa-star"></i> My Bloxx');
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $(".builder_library_insert a").html('<i class="fa fa-star"></i> My Bloxx');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });



    function exceed_plan_limit(message){
        Swal.fire({
            title: "Error!",
            text: message,
            confirmButtonColor: '#f27474',
            confirmButtonText: 'Upgrade',
            showCancelButton: true,
            icon: "error"
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                window.location = '/plans/';
            } else if (result.isDenied) {
                swal.close();
            }
        });
    }


    //Add Project Category JS

    $("body").on("click", ".user_actions a#add_prj", function (e) {
        e.preventDefault();
        /*if(project_limit==0){
            exceed_plan_limit("You've reached maximum number of Project. Please purchase/upgrade your plan.");
        } else {*/
            $(".form_steps").hide();
            $("#sync_step1").show();
            $("#sync_tool_modal #app_step_forms")[0].reset();
            $("#app_step_forms #card_selected").val("default");
            $("#sync_tool_modal").fadeIn("slow");
        //}
    });


    $("body").on("click", ".sync_app_created .app_steps", function (e) {
        e.preventDefault();
        var $this = $(this);
        var step_number = $this.attr('data-id');
        if (step_number != "create") {
            var app_nm = $("#app_name").val();

            if (app_nm == "") {
                alert("App name is required field");
            }else if(step_number == 2 && $("input[name=builder_option]").val() == 'divi'){
                $(".form_steps").hide();
                $("#divi_license_check").fadeIn("slow");
            } else {
                $(".form_steps").hide();
                $("#sync_step" + step_number).fadeIn("slow");
            }
        }
    });

    $(document).on('click','.validate_license',function(){
        if($("input[name=username]").val() == '' || $("input[name=api_key]").val() == ''){
            $("#license_msg").html("Both fields are required");
            setTimeout(function(){
                        $("#license_msg").html("");
                    },2000);
            return false;
        }
        $(".validate_license").html('Validating....');
        jQuery.ajax({
            type : "POST",
            url : window.location.origin+'/wp-admin/admin-ajax.php',
            data : {action:'check_license','username':$("input[name=username]").val(),'api_key':$("input[name=api_key]").val()},            
            success: function(resp) {
                $(".validate_license").html('Submit');
                var res = JSON.parse(resp);
                if(res.success === 1 || res.success === true){
                   activateDivi();
                }else{
                    if (typeof res.error !== 'undefined'){
                        $("#license_msg").html(res.error);
                    }else{
                        $("#license_msg").html("Username or API key does not exist");
                    }
                    setTimeout(function(){
                        $("#license_msg").html("");
                    },2000);
                }
                
            }
        });
    });
    $("body").on("click", ".manage_card_toggle", function (e) {
//        var $this = $(this);
//        if ($this.hasClass('card_active')) {
//            $this.html("Add Card");
//            $this.removeClass('card_active');
//            $(".card_add").hide();
//            $(".paymentList").fadeIn("slow");
//        } else {
//            $this.html("Select Card");
//            $this.addClass('card_active');
//            $(".paymentList").hide();
//            $(".card_add").fadeIn("slow");
//        }

        $("#app_step_forms #card_selected").val("new");
        $("#app_step_forms #app_btn_submit").trigger("click");

    });


    $("body").on("click", ".manage_card_toggle_profile", function (e) {
        var $this = $(this);
        if ($this.hasClass('card_active')) {
            $this.html("Add Card");
            $this.removeClass('card_active');
            $(".card_add").hide();
            $(".paymentList").fadeIn("slow");
        } else {
            $this.html("Card Listing");
            $this.addClass('card_active');
            $(".paymentList").hide();
            $(".card_add").fadeIn("slow");
        }
    });


    $("body").on("click", ".bloxx_account .card_show", function (e) {
        var $this = $(this);
        var encrypt_card = $this.attr('data-name');
        var full_card = $this.attr('data-id');
        var pointer_card = $this.attr('id');

        if ($this.hasClass('show')) {
            $this.removeClass('show');
            $this.html("Hide");
            $("#user_card_show_" + pointer_card).html(full_card);
        } else {
            $this.addClass('show');
            $this.html("Show");
            $("#user_card_show_" + pointer_card).html(encrypt_card);
        }
    });


    $("body").on("click", ".delete_card", function (e) {
        var $this = $(this);
        var delete_text = $this.html();
        var delete_element = $this.attr('data-id');
        var action = "delete_card_element";
        var encrypt_card_number = $this.attr('id');
        var card_number = $this.attr('data-name');

        Swal.fire({
            title: "Are you sure?",
            text: "You want to delete card " + encrypt_card_number,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'del_element': delete_element,
                        'card_number': card_number,
                        'action': action
                    },
                    beforeSend: function () {
                        $this.html('<i class="fa fa-refresh fa-spin"></i>')
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        $this.html(delete_text);
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            $this.parent().fadeOut("slow");
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        $this.html(delete_text);
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });

    });


    $('.sync_app_created #app_step_forms').on('keyup keypress', function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode === 13) {
            e.preventDefault();
            return false;
        }
    });

    $("body").on("submit", ".sync_app_created #app_step_forms", function (event) {
        event.preventDefault();
        var action_data=$("#action_data").val();
        var select_card = $(".sync_app_created #app_step_forms input[name='card_selected']").val();        
        var btn_text = $(".sync_app_created #app_step_forms #app_btn_submit").html();
        var ajax_url = builder.ajax_url;

        //if(action_data=="free_app"){
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('.sync_app_created #app_step_forms').serialize(),
            beforeSend: function () {
                $(".sync_app_created #app_step_forms #app_btn_submit").html('Please Wait ! <i class="fa fa-refresh fa-spin"></i>')
                Swal.fire({
                    title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                    html: '', // add html attribute if you want or remove
                    allowOutsideClick: false,
                    showCancelButton: false, // There won't be any cancel button
                    showConfirmButton: false,
                    onBeforeOpen: () => {
                        Swal.showLoading();
                    },
                });
            },
            success: function (resp) {
                $(".sync_app_created #app_step_forms #app_btn_submit").html(btn_text);
                $('#sync_tool_modal').hide();
                swal.close();
                if (resp.code == 200) {
                    //$(".modal").hide();
                    window.location.href = resp.redirect_url;                    
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                swal.close();
                $(".sync_app_created #app_step_forms #app_btn_submit").html(btn_text);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
        //}
    });



    $("body").on("click", ".sync_app_created .app_back_steps", function (e) {
        e.preventDefault();
        var $this = $(this);
        var step_number = $this.attr('data-id');
        if(step_number == 2 && $("input[name=builder_option]").val() == 'divi' && !$("#divi_license_check").is(":visible")){
                $(".form_steps").hide();
                $("#divi_license_check").fadeIn("slow");
                $("#divi-license-step").hide();
        }else{
            $(".form_steps").hide();
            $("#sync_step" + step_number).fadeIn("slow");
            $("#divi-license-step").hide();
        } 
        
    });



    $(document).on('click', '.select-builder', function () {
        $("#sync_step1 .hosting_steps").show();
        $("#sync_step1 .importBox").hide();
    });

    //Add Custom Category JS

    $(".add_custom_category a").click(function () {

        var limit_reached = $(this).attr('data-catcountreached');

        if (limit_reached == true || limit_reached == 'true') {

            Swal.fire({
                title: "Error!",
                text: "You've reached maximum number of Category. Please upgrade your plan.",
                confirmButtonColor: '#f27474',
                confirmButtonText: 'Upgrade',
                showCancelButton: true,
                icon: "error"
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    window.location = '/plans/';
                } else if (result.isDenied) {
                    swal.close();
                }
            });

        } else {

            Swal.fire({
                title: 'Enter Category Name',
                input: 'text',
                customClass: {
                    validationMessage: 'my-validation-message'
                },
                allowOutsideClick: false,
                confirmButtonText: "Add Category",
                confirmButtonColor: "#000",
                customClass: 'swal-wide',
                showCancelButton: true,
                cancelButtonText: 'Cancel',
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                                '<i class="fa fa-info-circle"></i> This field is required'
                                )
                    }
                }
            }).then(function (project) {
                $(".swal-wide button.swal2-confirm").html('<i class="fa fa-star"></i> Wait');
                if (project.isConfirmed) {
                    var builder_cats = project.value;
                    var ajax_url = builder.ajax_url;
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url: ajax_url,
                        data: {
                            action: 'builder_custom_cat_saved',
                            project_catnm: builder_cats
                        },
                        success: function (resp) {
                            $(".swal-wide button.swal2-confirm").html('Add Project');
                            if (resp.code == 200) {
                                Swal.fire({
                                    title: "Success!",
                                    text: resp.message,
                                    confirmButtonColor: '#000',
                                    icon: "success"
                                });
                                window.location.href = "";
                            } else {
                                Swal.fire({
                                    title: "Error!",
                                    text: resp.message,
                                    confirmButtonColor: '#000',
                                    icon: "error"
                                });
                            }
                        },
                        error: function () {
                            $(".swal-wide button.swal2-confirm").html('Add Project');
                            Swal.fire({
                                title: "Error!",
                                text: "Please try again later",
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    });
                }
            });
        } // end else
    });


    $("a.shupgrade").click(function () {
        Swal.fire({
            title: "Error!",
            text: "This feature is not for free users, Please upgrade",
            confirmButtonColor: '#f27474',
            confirmButtonText: 'Upgrade',
            showCancelButton: true,
            icon: "error"
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                window.location = '/plans/';
            } else if (result.isDenied) {
                swal.close();
            }
        });

    });


    /*$("#template_table .fa-pencil").click(function(){
     var inputValue = $(this).data('name');
     var inputValue2 = jQuery(this).data('id');
     Swal.fire({
     title: 'Enter Category Name',
     input: 'text',
     inputValue: inputValue,
     customClass: {
     validationMessage: 'my-validation-message'
     },
     allowOutsideClick: false,
     confirmButtonText: "Edit Category",
     confirmButtonColor: "#000",
     customClass: 'swal-wide',
     showCancelButton: true,
     cancelButtonText: 'Cancel',
     preConfirm: (value) => {
     if (!value) {
     Swal.showValidationMessage(
     '<i class="fa fa-info-circle"></i> This field is required'
     )
     }
     }
     }).then(function (project) {
     $(".swal-wide button.swal2-confirm").html('<i class="fa fa-star"></i> Wait');
     if (project.isConfirmed) { 
     var builder_cats=project.value;
     var ajax_url=builder.ajax_url;
     $.ajax({
     type : "POST",
     dataType : "json",
     url : ajax_url,
     data : {
     action: 'builder_custom_cat_edit',
     project_catnm: builder_cats,
     id: inputValue2
     },
     success: function(resp) {
     $(".swal-wide button.swal2-confirm").html('Add Project');                
     if(resp.code==200){                    
     Swal.fire({
     title: "Success!", 
     text: resp.message,
     confirmButtonColor: '#000', 
     icon: "success"
     });
     window.location.href="";
     } else {
     Swal.fire({
     title: "Error!", 
     text: resp.message,
     confirmButtonColor: '#000', 
     icon: "error"
     });                    
     }
     },error:function(){
     $(".swal-wide button.swal2-confirm").html('Add Project');
     Swal.fire({
     title: "Error!", 
     text: "Please try again later",
     confirmButtonColor: '#000', 
     icon: "error"
     });
     }
     });
     }
     });
     });*/

    $("#template_table #del_project .fa-trash").click(function () {
        var inputValue = jQuery(this).data('id');
        Swal.fire({
            title: 'Do you want to remove the category?',
            allowOutsideClick: false,
            confirmButtonText: "Delete Category",
            confirmButtonColor: "#000",
            customClass: 'swal-wide',
            showCancelButton: true,
            cancelButtonText: 'Cancel',
        }).then(function (project) {
            $(".swal-wide button.swal2-confirm").html('<i class="fa fa-star"></i> Wait');
            if (project.isConfirmed) {
                var builder_cats = project.value;
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        action: 'builder_custom_cat_delete',
                        id: inputValue
                    },
                    success: function (resp) {
                        $(".swal-wide button.swal2-confirm").html('Add Project');
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $(".swal-wide button.swal2-confirm").html('Add Project');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });


    // <!-- Section JS -->


    //Duplicate Page JS
    $("body").on("click", '.user_actions .duplicate_section a', function () {
        var $this = $(this);
        var dpl_nm = $this.attr('data-name');
        var dpl_id = $this.attr('data-id');
        var dpl_msg = $this.attr('data-title');
        var dpl_catid = $this.parent().attr('id');

        Swal.fire({
            title: 'Are you sure?',
            text: dpl_msg,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                var star_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'dpl_id': dpl_id,
                        'dpl_nm': dpl_nm,
                        'dpl_catid': dpl_catid,
                        'action': 'duplicate_section_content'
                    },
                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            }
        });
    });


    //Rename Section
    $("body").on("click", '.user_actions .section_rename_btn a', function () {
        var $this = $(this);
        var rn_nm = $this.attr('data-name');
        var rn_id = $this.attr('data-id');
        var rn_msg = $this.attr('data-title');

        Swal.fire({
            title: "Are you sure?",
            text: rn_msg,
            input: 'text',
            inputValue: rn_nm,
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'

        }).then((result) => {
            if (result.isConfirmed) {
                var star_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                var pnm = result.value;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'rn_id': rn_id,
                        'rn_nm': pnm,
                        'action': 'section_rename_ajax'
                    },
                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            }
        });
    });



    //Upload Section Jquery

    $("body").on("click", '.user_actions .plusSign a', function () {
        //$("#library_section").fadeIn("slow");
        $("#myDropdown").slideToggle();
    });

    $("body").on("click", '.user_actions .plusSign_section', function () {
        $("#library_section").fadeIn("slow");
        $("#myDropdown").slideToggle();
    });
    $("body").on("click", '.user_actions .plusSign_page', function () {
        $("#library_section_page").fadeIn("slow");
        $("#myDropdown").slideToggle();
    });



    // Delete Section
    $("body").on("click", ".user_actions .del_saction", function () {
        var inputValue = $(this).attr('id');
        Swal.fire({
            title: 'Do you want to remove the section ?',
            allowOutsideClick: false,
            confirmButtonText: "Delete Section",
            confirmButtonColor: "#000",
            customClass: 'swal-wide',
            showCancelButton: true,
            cancelButtonText: 'Cancel',
        }).then(function (project) {
            $(".swal-wide button.swal2-confirm").html('<i class="fa fa-star"></i> Wait');
            if (project.isConfirmed) {
                var builder_cats = project.value;
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        action: 'builder_custom_section',
                        section_id: inputValue
                    },

                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },

                    success: function (resp) {
                        $(".swal-wide button.swal2-confirm").html('Add Project');
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $(".swal-wide button.swal2-confirm").html('Add Project');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });



    //Change Project Function in Page app.sitebloxx.com/builder-projects/?term_id=37

    $("body").on("click", '.builder_change_project .move_project', function () {
        var cat_nm = $(this).attr('data-cat-name');
        var page_id = $(this).attr('data-id');
        var page_nm = $(this).attr('data-name');
        $("#change_page_id").val(page_id);
        $("#project_nm span").html(cat_nm);
        $("#page_nm span").html(page_nm);
        $("#change_project").show();
    });

    $(".builder_change_page_cats").submit(function (event) {
        event.preventDefault();
        var page_id = $("#change_page_id").val();
        var project_id = $("#builder_pagecat").val();
        $(".builder_change_page_cats button").html('Please Wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: $('.builder_change_page_cats').serialize(),
            success: function (resp) {
                $(".builder_change_page_cats button").html('Change Project');
                if (resp.code == 200) {
                    $(".modal").hide();
                    $("#template_table #builder_column_" + resp.pageid).remove();
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $(".builder_change_page_cats button").html('Change Project');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });


    //Add/Remove Starred Action

    $("body").on("click", '.user_actions .starred_action a', function () {
        var $this = $(this);
        var star_nm = $this.attr('data-name');
        var star_type = $this.attr('data-id');

        Swal.fire({
            title: 'Are you sure?',
            text: star_nm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                var star_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'star_id': star_id,
                        'star_type': star_type,
                        'action': 'builder_starred'
                    },
                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            }
        });


    });



    $("body").on("click", '.user_actions .duplicate_project a', function () {
        var $this = $(this);
        var dpl_nm = $this.attr('data-name');
        var dpl_id = $this.attr('data-id');
        var dpl_msg = $this.attr('data-title');

        Swal.fire({
            title: 'Are you sure?',
            text: dpl_msg,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                var star_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'dpl_id': dpl_id,
                        'dpl_nm': dpl_nm,
                        'action': 'builder_projectdpl'
                    },
                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            }
        });
    });



    $("body").on("click", '.user_actions .project_rename_btn a#rename_project', function () {
        var $this = $(this);
        var rn_nm = $this.attr('data-name');
        var rn_id = $this.attr('data-id');
        var rn_msg = $this.attr('data-title');

        Swal.fire({
            /*title: 'Are you sure?',
             text: rn_msg,
             icon: 'warning',
             showCancelButton: true,*/
            title: "Are you sure?",
            text: rn_msg,
            input: 'text',
            inputValue: rn_nm,
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'

        }).then((result) => {
            if (result.isConfirmed) {
                var star_id = $this.attr('id');
                var ajax_url = builder.ajax_url;
                var pnm = result.value;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'rn_id': rn_id,
                        'rn_nm': pnm,
                        'action': 'project_rename_ajax'
                    },
                    beforeSend: function () {
                        Swal.fire({
                            title: 'Please Wait ! <i class="fa fa-refresh fa-spin"></i>',
                            html: '', // add html attribute if you want or remove
                            allowOutsideClick: false,
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                Swal.showLoading();
                            },
                        });
                    },
                    success: function (resp) {
                        swal.close();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.href = "";
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swal.close();
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });

            }
        });
    });


    $("body").on("click", '.user_actions .builder_delete_project a', function () {
        var $this = $(this);
        var type_nm = $this.attr('data-name');

        // console.log('postlink = '+postLink+" === " + type_nm);
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to delete " + type_nm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var builder_type = $this.attr('id');
                var type_id = $this.attr('data-id');
                var type_nm = $this.attr('data-name');
                var postLink = $this.attr('data-link');
                var post_cats = $this.attr('data-cats');
                //alert(postLink);
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'builder_type': builder_type,
                        'type_id': type_id,
                        'post_cats': post_cats,
                        'type_nm': type_nm,
                        'postLink': postLink,
                        'action': 'builder_del_type'
                    },
                    beforeSend: function () {
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        if (resp.code == 200) {
                            if(builder_type=="del_page"){
                                sync_page_function(post_cats, $this);                             
                            } else {
                                $(".modal").hide();
                                $("#template_table #builder_column_" + resp.type_id).remove();
                                Swal.fire({
                                    title: "Success!",
                                    text: resp.message,
                                    confirmButtonColor: '#000',
                                    icon: "success"
                                });
                                window.location.reload();
                            }
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });




    $("body").on("click", '.user_actions .builder_auto_sync_edit a', function (event) {
        event.preventDefault();
        var $this = $(this);
        var builder_pageid = $this.attr('id');
        var builder_catid = $this.attr('data-id');
        var builder_pagelink = $this.attr('href');

        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                'builder_pageid': builder_pageid,
                'builder_catid': builder_catid,
                'action': 'builder_edit_sysc'
            },
            beforeSend: function () {
                $this.html('<i class="fa fa-spinner fa-spin"></i>');
            },
            success: function (resp) {
                if (resp.code == 200) {
                    window.location.href = builder_pagelink;
                } else if (resp.code == 202) {

                    window.location.href = builder_pagelink;
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                swal.close();
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });




    //Set Default Home Page
    $("body").on("click", '.user_actions .builder_sethome_page', function (event) {
        event.preventDefault();
        var $this = $(this);
        var cats_id = $this.attr('data-name');
        var page_id = $this.attr('data-id');        

        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                'builder_pageid': page_id,
                'builder_catid': cats_id,
                'action': 'builder_homepage'
            },
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                swal.close();
                $(".boxWhite .projectHeader .default_page_selected .defaulthome_page").remove();
                $($this).parents().find("#default_" + page_id).html('<span class="defaulthome_page">Home</span>');
                $($this).parent().html("<a href='javascript:void(0)' class='home_selection' id='homeselection_" + page_id + "'><i class='far fa-file-alt'></i> Home Page Selected</a>");
                if (resp.code == 200) {
                    /*Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.href = '';*/
                    sync_page_function(cats_id, $this); 

                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                swal.close();
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });

    //End Set Default Home Page



    $("body").on("click", '.user_actions .trash_restore a', function () {
        var $this = $(this);
        var type_nm = $this.attr('data-name');

        // console.log('postlink = '+postLink+" === " + type_nm);
        Swal.fire({
            title: 'Are you sure?',
            text: type_nm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                var type_id = $this.attr('id');

                //alert(postLink);
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'type_id': type_id,
                        'action': 'builder_trash_restore'
                    },
                    beforeSend: function () {
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.reload();
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });



    $(document).on('click','.skipfor_now',function(e){
        e.stopPropagation();
        $("#free-plan-selector").trigger('click');
    });


    //Sync Pages

    $("body").on("click", '.user_actions .page_sync', function () {
        var $this = $(this);
        var term_id = $this.attr('data-name');        
        var sync_html = $this.html();
        var ajax_url = builder.ajax_url;
        sync_page_function(term_id, $this);            
    });



    function sync_page_function(term_id, $this){
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                'term_id': term_id,
                'action': 'term_page_sync'
            },

            beforeSend: function () {
                //$this.html('<i class="fas fa-sync fa-spin"></i>');
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {                
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.location.reload();
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {                
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    }



    $("body").on("click", '.user_actions .permanent_delete a', function () {
        var $this = $(this);
        var type_nm = $this.attr('data-name');

        // console.log('postlink = '+postLink+" === " + type_nm);
        Swal.fire({
            title: 'Are you sure?',
            text: type_nm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes, Delete It'
        }).then((result) => {
            if (result.isConfirmed) {
                var type_id = $this.attr('id');
                var postLink = $this.attr('data-link');
                //alert(postLink);
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'type_id': type_id,
                        'postLink': postLink,
                        'action': 'builder_pma_delete'
                    },
                    beforeSend: function () {
                        swal.fire({
                            customClass: {
                                container: 'swal2_spinner',
                            },
                            html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                            showConfirmButton: false,
                            onRender: function () {
                                $('.swal2-content').prepend(sweet_loader);
                            }
                        });
                    },
                    success: function (resp) {
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                            window.location.reload();
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });



    //Builder Live Edit
    $('body').on('click touch', '#builder-page-header', function (e) {
        e.preventDefault();
        $('#syncBox-main').show();
        $('#list_section').hide();
        $('#step1').show();
    });
    $('body').on('click touch', '#builder-page-footer', function (e) {
        e.preventDefault();
        $('#syncBox-main').show();
        $('#list_section').hide();
        $('#step1').show();
    });


    $('body').on('click touch', '#openSlideNav', function () {
        $("#slideNav").addClass("active");
        $(this).hide();
    });

    $('body').on('click touch', '#closeSlideNav', function () {
        $(".project_details_menu li").removeClass("active");
        $("#openSlideNav").show();
        $("#slideNav").removeClass("active");
    });


    $('body').on('click touch', '.builder-edit', function () {
        $(this).hide();
        $(this).parent('.builder-box').addClass('builder-editable');
        $(this).siblings('.builder-text').attr('contenteditable', 'true');
        $(this).siblings('.builder-save').show();
        $(this).siblings('.builder-cancel').show();
        $(this).siblings('.external_link').hide();
    });

    $('body').on('click touch', '.builder-cancel', function () {
        var $this = $(this);
        $(this).hide();
        $(this).siblings('.builder-save').hide();
        $this.parent('.builder-box').removeClass('builder-editable');
        $this.siblings('.builder-text').removeAttr('contenteditable');
        $this.siblings('.builder-edit').show();
        $this.siblings('.external_link').show();
    });

    $('body').on('click touch', '.builder-save', function () {
        var $this = $(this);
        var builder_updatenm_new = $this.parent().find(".builder-text").html().trim();
        var builder_updatenm = builder_updatenm_new.replace(/\<br\>/g, '');
        var builder_updatetype = $this.attr('id');
        var builder_updateid = $this.attr('data-id');
        var changed_title = $this.attr('data-title');
         var term_id = $("input[name=term_id]").val();
        var ajax_url = builder.ajax_url;
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to change " + changed_title,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $this.html('<i class="fa fa-spinner fa-spin"></i>');
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'builder_new_text': builder_updatenm,
                        'builder_type': builder_updatetype,
                        'builder_prj_id': term_id,
                        'builder_id': builder_updateid,
                        'action': 'builder_updatenm'
                    },
                    success: function (resp) {
                        $this.html('<i class="fa fa-save"></i>');
                        $this.hide();
                        $this.siblings('.builder-cancel').hide();
                        $this.parent('.builder-box').removeClass('builder-editable');
                        $this.siblings('.builder-text').removeAttr('contenteditable');
                        $this.siblings('.builder-edit').show();
                        $this.siblings('.external_link').show();
                        if (resp.code == 200) {
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $this.html('<i class="fa fa-save"></i>');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });


    //Assign Header and Footer
    $('body').on('click touch', '.assign_headfooter', function () {
        var $this = $(this);

        var postId = $this.attr('id');
        var termId = $this.attr('data-id');
        var assign_type = $this.attr('data-title');
        var sync_connect = $(".prd_data_sync").attr('title');
        var project_id = $("#project_id").val();
        var get_img = $this.html();
        if (assign_type == "assign_header") {
            jQuery("#syncBox_assign_header .assign_sync li").removeClass("activehead");
            jQuery(this).parent().addClass("activehead");
            header_id = postId;
            footer_id = "no";
        } else {
            jQuery("#syncBox_assign_footer .assign_sync li").removeClass("activefooter");
            jQuery(this).parent().addClass("activefooter");
            footer_id = postId;
            header_id = "no";
        }
        var sweet_loader = '<div class="sweet_loader"><svg viewBox="0 0 140 140" width="140" height="140"><g class="outline"><path d="m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84" stroke="rgba(0,0,0,0.1)" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></g><g class="circle"><path d="m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84" stroke="#71BBFF" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-dashoffset="200" stroke-dasharray="300"></path></g></svg></div>';
        var ajax_url = builder.ajax_url;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'headfooter_assign',
                term_id: termId,
                assign_type: assign_type,
                page_id: project_id,
                header_id: header_id,
                footer_id: footer_id,
            },
            beforeSend: function () {
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                if (resp.code == 200) {
                    $("#syncBox_" + assign_type).hide();
                    /*if (assign_type == "assign_header") {
                     if (sync_connect == "Connected") {
                     $(".synctr_" + assign_type).html("<td>1</td><td>" + resp.assign_nm + "</td><td><ul class='builder_action_btn'><li><a href='javascript:void(0)' title='Edit' class='rounded-left modal_syncbox' id='" + assign_type + "'><i class='fa fa-pencil'></i></a></li><li><a title='Sync' class='sync_assign_request' href='javascript:void(0)' id='" + termId + "' data-id='assign_header'><i class='fa fa-refresh'></i></a></li><li><a href='javascript:void(0)' title='Delete' class='rounded-right assign_delete' id='" + termId + "' data-name='assigned " + resp.assign_nm + "' data-id='del_header' data-title='" + assign_type + "'><i class='fa fa-trash'></i></a></li></ul></td>");
                     } else {
                     $(".synctr_" + assign_type).html("<td>1</td><td>" + resp.assign_nm + "</td><td><ul class='builder_action_btn'><li><a href='javascript:void(0)' title='Edit' class='rounded-left modal_syncbox' id='" + assign_type + "'><i class='fa fa-pencil'></i></a></li><li><a href='javascript:void(0)' title='Delete' class='rounded-right assign_delete' id='" + termId + "' data-name='assigned " + resp.assign_nm + "' data-id='del_header' data-title='" + assign_type + "'><i class='fa fa-trash'></i></a></li></ul></td>");
                     }
                     } else {
                     if (sync_connect == "Connected") {
                     $(".synctr_" + assign_type).html("<td>1</td><td>" + resp.assign_nm + "</td><td><ul class='sync_assign_request'><li><a href='javascript:void(0)' title='Edit' class='rounded-left modal_syncbox' id='" + assign_type + "'><i class='fa fa-pencil'></i></a></li><li><a title='Sync' class='sync_assign_noaction' href='javascript:void(0)' id='" + termId + "' data-id='assign_header'><i class='fa fa-refresh'></i></a></li><li><a href='javascript:void(0)' title='Delete' class='rounded-right assign_delete' id='" + termId + "' data-name='assigned " + resp.assign_nm + "' data-id='del_footer' data-title='" + assign_type + "'><i class='fa fa-trash'></i></a></li></ul></td>");
                     } else {
                     $(".synctr_" + assign_type).html("<td>1</td><td>" + resp.assign_nm + "</td><td><ul class='builder_action_btn'><li><a href='javascript:void(0)' title='Edit' class='rounded-left modal_syncbox' id='" + assign_type + "'><i class='fa fa-pencil'></i></a></li><li><a href='javascript:void(0)' title='Delete' class='rounded-right assign_delete' id='" + termId + "' data-name='assigned " + resp.assign_nm + "' data-id='del_footer' data-title='" + assign_type + "'><i class='fa fa-trash'></i></a></li></ul></td>");
                     }
                     }*/
                    if (assign_type == "assign_header") {
                        $(".header_resp").html(get_img);
                    } else {
                        $(".footer_resp").html(get_img);
                    }

                    $(".left-list li.open-sidebar").trigger("click");
                    Swal.fire({
                        title: "Success!",
                        text: resp.message + ", Also Html will be reflected after refreshing this page",
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    $("#syncBox_" + assign_type).hide();
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#syncBox_" + assign_type).hide();
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });


    //Assign Header and Footer
    $('body').on('click touch', '.sync_assign', function () {
        var $this = $(this);
        var term_id = $this.attr('id');
        $this.html('<i class="fa fa-spinner fa-spin"></i>');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'sync_headfooter',
                term_id: term_id
            },
            success: function (resp) {
                $this.html('<i class="fa fa-refresh"></i>');
                Swal.fire({
                    title: "Success!",
                    text: resp.message,
                    confirmButtonColor: '#000',
                    icon: "success"
                });
            },
            error: function () {
                $this.html('<i class="fa fa-refresh"></i>');
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });

    });


    $("body").on("click", ".modal_syncbox", function () {
        var $this = $(this);
        var assign_modal = $this.attr('id');
        $("#syncBox_" + assign_modal).show();
    });

    $("body").on("click", '.assign_delete', function () {
        $this = $(this);
        var delnm = $this.attr('data-name');
        var del_type = $this.attr('data-id');
        var termId = $this.attr('id');
        var data_title = $this.attr('data-title');
        var ajax_url = builder.ajax_url;
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to delete " + delnm,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#9F05C5',
            cancelButtonColor: '#000',
            confirmButtonText: 'Yes, Delete It!'
        }).then((result) => {
            if (result.isConfirmed) {
                $this.html('<i class="fa fa-spinner fa-spin"></i>');
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        'delnm': delnm,
                        'del_type': del_type,
                        'termId': termId,
                        'action': 'sync_delete_assign'
                    },
                    success: function (resp) {
                        $this.html('<i class="fa fa-trash"></i>');
                        if (resp.code == 200) {
                            if (del_type == "del_header") {
                                $(".synctr_" + data_title).html("<td colspan='3' class='text-center'><a href='javascript:void(0);' class='modal_syncbox' id='assign_header'>Select a header</a> for your project</td>");
                            } else {
                                $(".synctr_" + data_title).html("<td colspan='3' class='text-center'><a href='javascript:void(0);' class='modal_syncbox' id='assign_footer'>Select a footer</a> for your project</td>");
                            }
                            Swal.fire({
                                title: "Success!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "success"
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: resp.message,
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        $this.html('<i class="fa fa-trash"></i>');
                        Swal.fire({
                            title: "Error!",
                            text: "Please try again later",
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                });
            }
        });
    });


    $("body").on("click", ".user_action .add_page_restriction", function (e) {
        var $this=$(this);
        var pcat_id = $(this).attr('data-name');
        var redirect_page = $(this).attr('data-title');
        //var page_limit="<?php echo get_current_user_limits(false,true,false); ?>";
        //var user_page_created="<?php echo user_page_count(get_current_user_id()); ?>";
        e.preventDefault();
        if (page_limit <= user_page_created) {
            Swal.fire({
                title: "Error!",
                text: "You've reached maximum number of Page with Free plan. Please upgrade your plan.",
                confirmButtonColor: '#f27474',
                confirmButtonText: 'Upgrade',
                showCancelButton: true,
                icon: "error"
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    window.location = '/plans/';
                } else if (result.isDenied) {
                    swal.close();
                }
            });
            return false;
        } else {

            Swal.fire({
                title: '<img src="/wp-content/plugins/divi-builder/images/Frame.png" alt="..."> Add New Page',
                input: 'text',
                showCloseButton: true,
                customClass: {
                    validationMessage: 'my-validation-message'
                },
                allowOutsideClick: false,
                confirmButtonText: "Start Building",
                confirmButtonColor: "#000",
                customClass: 'swal-wide',
                showDenyButton: false,
                denyButtonText: `Close`,
                preConfirm: (value) => {
                    if (!value) {
                        Swal.showValidationMessage(
                                '<i class="fa fa-info-circle"></i> This field is required'
                                )
                    }
                }
            }).then(function (project) {
                if (project.isConfirmed) {
                    $(".swal-wide button.swal2-confirm").html('Please wait <i class="fa fa-spinner fa-spin" style="font-size:20px"></i>');
                    var ajax_url = builder.ajax_url;
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url: ajax_url,
                        data: {
                            action: 'builder_createpage',
                            pcat_id: pcat_id,
                            pnm: project.value,
                            page_red: redirect_page
                        },
                        beforeSend: function () {
                            //$this.html('<i class="fas fa-sync fa-spin"></i>');
                            swal.fire({
                                customClass: {
                                    container: 'swal2_spinner',
                                },
                                html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                                showConfirmButton: false,
                                onRender: function () {
                                    $('.swal2-content').prepend(sweet_loader);
                                }
                            });
                        },
                        success: function (resp) {
                            if (resp.code == 202) {
                                Swal.fire({
                                    title: "Error!",
                                    text: resp.message,
                                    confirmButtonColor: '#000',
                                    icon: "error"
                                });
                            } else {
                                //var page_url = resp.builder_link + "?update=1";
                                /*var page_url = resp.builder_link;
                                window.location.href = page_url;*/
                                sync_page_function(pcat_id, $this); 
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: "Error!",
                                text: "Please try again later",
                                confirmButtonColor: '#000',
                                icon: "error"
                            });
                        }
                    });
                }
            });
        }
    });



    $("body").on("click", ".shopreg_linked a", function (event) {
        event.preventDefault();
        var $this = $(this);
        var get_text = $this.find('.menu-image-title').html();
        var ajax_url = builder.ajax_url;
        $this.find('.menu-image-title').html('<i class="fa fa-spinner fa-spin"></i>');
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                'action': 'api_registerandlogin'
            },
            success: function (resp) {
                $this.find('.menu-image-title').html(get_text);
                if (resp.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    window.open(resp.website_url, '_blank');
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $this.find('.menu-image-title').html(get_text);
                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });



    // $("body").on("click", "#leftCategorySidebar .wrapCategoryMenu .builder_cats", function(){
    //     var $this=$(this);
    //     var cats_id=$this.attr('id');
    //     var ajax_url=builder.ajax_url;

    //     $.ajax({
    //         type : "POST",
    //         url : 'https://app.sitebloxx.com/get-ajax/',
    //         //url : ajax_url,
    //         data : {                
    //             'action': 'builder_ajax_layout',
    //             'cats_id': cats_id
    //         },
    //         beforeSend: function() {
    //             $(".layout_selection").html('<section class="builder_posts" id="cat_post_'+cats_id+'" style="display:flex;align-items:center;justify-content:center;"><i class="fa fa-spinner fa-spin fa-4x text-white "  ></i></section>');
    //         }, success: function(resp) {
    //             $(".layout_selection section").html(resp);
    //             sortable_layout();
    //         }, error:function(){                
    //             Swal.fire({
    //                 title: "Error!", 
    //                 text: "Please try again later",
    //                 confirmButtonColor: '#000', 
    //                 icon: "error"
    //             });
    //         }
    //     }); 
    // });

    jQuery("body").on("click", ".move_filemanager", function () {
        var $this = $(this);
        var checked = $(this).is(":checked");
        if (checked) {
            $("#elfinder").show();
        } else {
            $("#elfinder").hide();
        }
    });



    jQuery("body").on("click", ".move_2divi", function () {
        var $this = $(this);
        var href_link = $this.attr('data-href');
        //var checked = $(this).is(":checked");
        //if (checked) {
        Swal.fire({
            title: 'Divi Builder',
            text: "You are now entering the standard Divi Builder. Some Bloxx features will be disabled.",
            // icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Okay'
        }).then((result) => {
            if (result.isConfirmed) {
                $this.html('<i class="fa fa-spinner fa-spin"></i>');
                window.location.href = href_link;
            } else {
                $this.prop('checked', false);
            }
        });
        //} else {
        //$this.prop('checked', false);
        //}
    });

    jQuery("body").on("click", ".move_2divi1", function (e) {
        var $this = $(this);

        var href_link = $this.attr('data-href');
        //window.location.href = href_link;
        jQuery(".dicvi").trigger("click");
        e.preventDefault();
        return false;
        var checked = $(this).is(":checked");
        if (checked) {
            Swal.fire({
                title: 'Divi Builder',
                text: "You are now entering the standard Divi Builder. Some Bloxx features will be disabled.",
                // icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#000',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Okay'
            }).then((result) => {
                if (result.isConfirmed) {
                    $this.html('<i class="fa fa-spinner fa-spin"></i>');
                    window.location.href = href_link;
                } else {
                    $this.prop('checked', false);
                }
            });
        } else {
            $this.prop('checked', false);
        }
    });




    $(document).on('submit', '#sftp_credentials', function (e) {
        e.preventDefault();

        if (!isUpper($("#sftp_credentials input[name=password]").val()) || !hasLowerCase($("#sftp_credentials input[name=password]").val()) || !hasNumbers($("#sftp_credentials input[name=password]").val())) {
            //$("#res-msg").html('Password should contain at least one lowercase character, at least one uppercase character and at least one number');
            swal.fire('Password should contain at least one lowercase character, at least one uppercase character and at least one number');
        } else {

            var ajax_url = bloxx.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: $("#sftp_credentials").serialize(),
                beforeSend: function () {
                    $("#sftp_credentials #add_cred-btn").prop('disabled', true);
                    $("#sftp_credentials #add_cred-btn").html('Please wait...');

                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    swal.close();
                    $("#add_cred-btn").prop('disabled', false);
                    $("#add_cred-btn").html('Submit');
                    if (resp.code == 200) {
                        $("#sftp_credentials")[0].reset();
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                        setTimeout(function () {
                            //location.reload();
                        }, 2000);
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#add_cred-btn").prop('disabled', false);
                    $("#add_cred-btn").html('Submit');
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });


    $(document).on('click', '.sftp_editable', function (e) {
        var term_id = $(this).attr('id');
        var server_id = $(this).attr('server-id');
        var app_id = $(this).attr('app-id');
        var cred_id = $(this).attr('data-id');
        var user_nm = $(this).parent().attr('id');
        var action = "update";

        $("#update_sftp_credentials input[name=server_id]").val(server_id);
        $("#update_sftp_credentials input[name=app_id]").val(app_id);
        $("#update_sftp_credentials input[name=username]").val(user_nm);
        $("#update_sftp_credentials input[name=cred_id]").val(cred_id);
        $("#update_sftp_credentials input[name=type]").val(action);
        $("#update_sftp_credentials input[name=term_id]").val(term_id);
        $("#update_sftp_credentials").show();
    });


    // jQuery('#preview-project-disable').click(function(){
    //     Swal.fire({
    //         title: 'You have not created any pages!',
    //         text: "Get started building your first web page!",
    //         icon: '',
    //         showCancelButton: false,
    //         confirmButtonColor: '#000',
    //         cancelButtonColor: '#d33',
    //         confirmButtonText: 'Create Pages'
    //     }).then((result) => {
    //         if (result.isConfirmed) {
    //            jQuery('#add_page_restriction').trigger('click');
    //         } 
    //     });
    // });
    // jQuery('#share-project-disable').click(function(){
    //     jQuery('#preview-project-disable').trigger('click');
    // });

    jQuery('#share-project-enable-web').click(function () {
        var $this = $(this);
        var href_link = $this.attr('data-link');

        Swal.fire({
            title: 'Share Link!!!',
            input: 'text',
            allowOutsideClick: false,
            confirmButtonText: "Copy Link",
            confirmButtonColor: "#000",
            customClass: 'copied-input',
            showDenyButton: false,
            showCancelButton: true,
            // denyButtonText: `Close`,
            inputValue: href_link,
        }).then((result) => {
            if (result.isConfirmed) {
                var termID = $this.attr('data-id');
                var copyText = jQuery(document).find('.copied-input input[type="text"]');
                copyText.select();
                document.execCommand("copy");
                var ajax_url = builder.ajax_url;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: ajax_url,
                    data: {
                        action: 'share_update_exclude_url',
                        data: termID
                    },
                    success: function (resp) {
                        console.log(resp.message);
                    },
                });

            }
        });

    });

    jQuery('#share-project-enable-mobile').click(function () {
        var $this = $(this);
        var href_link = $this.attr('data-link');
        var termID = $this.attr('data-id');
        var ajax_url = builder.ajax_url;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: ajax_url,
            data: {
                action: 'share_update_exclude_url',
                data: termID
            },
            success: function (resp) {
                console.log(resp.message);
            },
        });
        //console.log(href_link);
        navigator
                .share({
                    title: document.title,
                    text: 'Hello World',
                    url: href_link
                })
                .then(() => console.log('Successful share! 🎉'))
                .catch(err => console.error(err));

    })


    $("#user-profile").validate({
        rules: {
            pass2: {
                equalTo: "#pass1"
            }
        },
        messages: {
            pass2: "Enter Repeat Password Same as Password"
        },
        submitHandler: function (form) {
            var ajax_url = bloxx.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: $("#user-profile").serialize(),
                beforeSend: function () {
                    $("#user-profile #update_info").prop('disabled', true);
                    $("#user-profile #update_info").html('<i class="fa fa-spinner fa-spin"></i>');
                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    swal.close();
                    $("#user-profile #update_info").prop('disabled', false);
                    $("#user-profile #update_info").html('Submit');

                    if (resp.code == 200) {
                        $("#pass1").val('');
                        $("#pass2").val('');
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#user-profile #update_info").prop('disabled', false);
                    $("#user-profile #update_info").html('Submit');

                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });



    $("#card_info #user_card_info").validate({
        rules: {
            cardfirst_name: {
                required: true,
            }
        },
        submitHandler: function (form) {
            var ajax_url = bloxx.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: $("#user_card_info").serialize(),
                beforeSend: function () {
                    $("#user_card_info #submit_card").prop('disabled', true);
                    $("#user_card_info #submit_card").html('<i class="fa fa-spinner fa-spin"></i>');
                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    swal.close();
                    $("#user_card_info #submit_card").prop('disabled', false);
                    $("#user_card_info #submit_card").html('Submit');
                    $("#user_card_info")[0].reset();
                    if (resp.code == 200) {
                        $("#pass1").val('');
                        $("#pass2").val('');
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                        window.location.href = "/bloxx-account/?active=card_info_trigger";
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#user_card_info #submit_card").prop('disabled', false);
                    $("#user_card_info #submit_card").html('Submit');

                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });

    $("#bill_profile").validate({
        rules: {
            bill_eml: {
                email: true
            }
        },
        submitHandler: function (form) {
            var ajax_url = bloxx.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: $("#bill_profile").serialize(),
                beforeSend: function () {
                    $("#bill_profile #update_info").prop('disabled', true);
                    $("#bill_profile #update_info").html('<i class="fa fa-spinner fa-spin"></i>');
                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    swal.close();
                    $("#bill_profile #update_info").prop('disabled', false);
                    $("#bill_profile #update_info").html('Submit');

                    if (resp.code == 200) {
                        $("#pass1").val('');
                        $("#pass2").val('');
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#bill_profile #update_info").prop('disabled', false);
                    $("#bill_profile #update_info").html('Submit');

                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });




    //AI Modal

    $("body").on("click", ".ai_programs", function () {
        $("#ai_design").show();
    });


    setInterval(function () {
        $(".dropdownShow").parents().removeClass("et-fb-root-ancestor-sibling");
    }, 3000);



    //Start collaborate Invitation JS

    $(".collaborators_invite_modal form#collab_invitation").validate({
        rules: {
            collab_email: {
                email: true
            }
        },
        submitHandler: function (form) {

            var ajax_url = bloxx.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                dataType: "json",
                data: $("#collab_invitation").serialize(),
                beforeSend: function () {
                    $("#collab_invitation #update_info").prop('disabled', true);
                    $("#collab_invitation #update_info").html('<i class="fa fa-spinner fa-spin"></i>');
                    swal.fire({
                        customClass: {
                            container: 'swal2_spinner',
                        },
                        html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                        showConfirmButton: false,
                        onRender: function () {
                            $('.swal2-content').prepend(sweet_loader);
                        }
                    });
                },
                success: function (resp) {
                    swal.close();
                    $("#collab_invitation #update_info").prop('disabled', false);
                    $("#collab_invitation #update_info").html('Submit');
                    $("#collab_invitation")[0].reset();
                    if (resp.code == 200) {
                        $("#pass1").val('');
                        $("#pass2").val('');
                        Swal.fire({
                            title: "Success!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: resp.message,
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
                },
                error: function () {
                    $("#collab_invitation #update_info").prop('disabled', false);
                    $("#collab_invitation #update_info").html('Submit');
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            });
        }
    });
    //End collaborate Invitation JS


    $(".js-accordion-title").click(function () {
        $(this).toggleClass("open").parents('h4').next().slideToggle(300);
    });



    /*dropdown menu*/

    $('.buttonView').click(function () {
        //$('.dropdownList').slideUp();
        $(this).next('.dropdownList').slideToggle();
    });

    $(document).click(function (e) {
        var target = e.target;
        if (!$(target).is('.buttonView') && !$(target).parents().is('.buttonView'))
                //{ $('.dropdownList').hide(); }
                {
                    $('.dropdownList').slideUp();
                }
    });


    /*-=-==-=Search Script-=-=-=*/
    $("#searchTheKey").on('keyup', function () {
        var value = $(this).val().toLowerCase();
        $("#matchKey li").each(function () {
            if ($(this).text().toLowerCase().search(value) > -1) {
                $(this).show();
                $(this).prev('.subjectName').last().show();
            } else {
                $(this).hide();
            }
        });
    })
    /*-=-==-==-=GridList View-=-=-=-==-=-=--*/



    const listViewButton = document.querySelector('.list-view-button');
    const gridViewButton = document.querySelector('.grid-view-button');
    const list = document.querySelectorAll('div.list');

    $(document).on('click', ".list-view-button", function () {
        $(this).addClass('active').prev().removeClass('active');
        if ($(this).parents('.filter-options').next().hasClass('list')) {
            $(this).parents('.filter-options').next().removeClass('grid-view-filter').addClass('list-view-filter');
        } else {
            $(this).parents('.filter-options').next().children('.list').removeClass('grid-view-filter').addClass('list-view-filter');
            $(this).parent().prev('button').html('<i class="fa fa-bars"></i>');
        }
    });



    $(document).on('click', ".grid-view-button", function () {
        $(this).addClass('active').next().removeClass('active');
        if ($(this).parents('.filter-options').next().hasClass('list')) {
            $(this).parents('.filter-options').next().addClass('grid-view-filter').removeClass('list-view-filter');
        } else {
            $(this).parents('.filter-options').next().children('.list').addClass('grid-view-filter').removeClass('list-view-filter');
            $(this).parent().prev('button').html('<i class="fa fa-th-large"></i>');
        }
    });

    $('.panel').hide();
    $(".panelContainer .panel:first-child").show();
    $('.tabs a').click(function () {
        $('.panel').hide();
        $(".spinner_loader").show();
        $('.tabs a.active').removeClass('active');
        $(this).addClass('active');
        var panel = $(this).attr('href');
        $(panel).fadeIn(1000);
    }); // end click


    // jQuery.
    $(function () {
        const tabLinks = $('#tab-links li a');
        tabLinks.click(function (event) {
            var $this = $(this);
            event.preventDefault();
            $('#tab-links a.active, div.active').removeClass('active');
            $this.addClass('active');
            $($this.attr('href')).addClass('active');
            if ($(this).attr('id') == "bckandrest_tabs") {
                setTimeout(function () {
                    $("#bckandrest").trigger("click");
                }, 1000);
            }
        });
    });



    if ($(".wpinv-receipt-details").length > 0) {
//        $("#sync_step1 .closebtn").hide();
//        $("#sync_step1 .hosting_steps").hide();
//        $("#sync_step1 .importBox").hide();
//        $("#sync_step2").hide();
//        $(".modal-backdrop").remove();
//        $("#sync_tool_modal").modal('show');
        $(".bloxx_hosting").eq(0).trigger('click');

    }



    $('.clickDrop').click(function () {
        if ($(this).next('.dropdownShow').css("left") == "0px") {
            $(this).next('.dropdownShow').css({"left": "100%", "opacity": "1"});
        } else {
            $(this).next('.dropdownShow').css({"left": "0", "opacity": "0"});

        }

    });

    $(document).click(function (e) {
        var target = e.target;
        if (!$(target).is('.clickDrop') && !$(target).parents().is('.clickDrop')) {
            $('.dropdownShow').css({"left": "0", "opacity": "0"});
        }
    });



}); //End JS

function goback(el) {
    var previous_url = jQuery(el).attr('data-href');
    console.log(previous_url);
    window.location.href = previous_url;
}


function openTab(event, tabid) {
    var elems = document.querySelectorAll(".tabcontentwrap");
    [].forEach.call(elems, function (el) {
        el.classList.remove("active");
    });
    document.getElementById(tabid).classList.add('active');
}

function updateprofile() {
    var elements = document.getElementById("user-profile");
    var formData = new FormData();
    for (var i = 0; i < elements.length; i++) {
        formData.append(elements[i].name, elements[i].value);
    }
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function () {
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
            document.getElementById("ajax-response").classList.remove('hidden');
            document.getElementById("ajax-response").innerHTML = xmlHttp.responseText;
            setTimeout(function () {
                document.getElementById("ajax-response").classList.add('hidden');
            }, 3000);
        }
    }
    xmlHttp.open("post", builder.ajax_url);
    xmlHttp.send(formData);
}

var BASE64_MARKER = ';base64,';

function convertDataURIToBinary(dataURI) {
    var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;
    var base64 = dataURI.substring(base64Index);
    var raw = window.atob(base64);
    var rawLength = raw.length;
    var array = new Uint8Array(new ArrayBuffer(rawLength));

    for (i = 0; i < rawLength; i++) {
        array[i] = raw.charCodeAt(i);
    }
    return array;
}

function onOff() {
    var checkInput = document.getElementById('check');
    var on = document.getElementsByClassName('on');
    var off = document.getElementsByClassName('off');


    if (checkInput.checked == true) {
        on[0].style.color = "#231942";
        off[0].style.color = "#9C9EB8";
    } else {
        on[0].style.color = "#9C9EB8";
        off[0].style.color = "#231942";
    }
}

jQuery(".modalBtn").on('click', function () {
    jQuery(".project_plan_modal").addClass('model-open');
});

jQuery(".subsc_btn").on('click', function () {
    jQuery(".subscription_plan_modal").addClass('model-open');
});

jQuery(".modalClose, .bg-overlay").click(function () {
    jQuery(".custom-model-main").removeClass('model-open');
});

jQuery(".modalForm").on('click', function () {
    jQuery(".hire-model-main").addClass('model-open');
});
jQuery(".modalClose, .bg-overlay").click(function () {
    jQuery(".hire-model-main").removeClass('model-open');
});

jQuery(".videoButton").on('click', function () {
    jQuery(".videoModal").addClass('model-open');
});
jQuery(".modalClose, .bg-overlay").click(function () {
    jQuery(".videoModal").removeClass('model-open');
});

jQuery(document).ready(function ($) {
    if ($("div.pending_app").length > 0) {
        jQuery("li.mega-project_own_cats a").addClass('pending_app');
        jQuery("li.mega-project_own_cats a").append('<div class="loader"></div>');
        //setTimeout(function (){
        intervl = setInterval(function () {
            checkforpendingapps();
        }, 30000);
        //}, 30000);
    }


    function checkforpendingapps() {
        for (var i = 0; i < $("div.pending_app").length; i++) {
            var current_element = $("div.pending_app").eq(i);
            var ajax_url = builder.ajax_url;
            $.ajax({
                type: "POST",
                url: ajax_url,
                async: false,
                data: {
                    'action': 'checkuser_appmeta',
                    'term_id': $("div.pending_app").eq(i).attr('data-term-id'),
                },
                success: function (resp) {
                    if (resp.replace(/\s+/g, '') == 'yes') {
                        current_element.removeClass('pending_app');
                    }
                }
            });
        }

        if (jQuery("div.pending_app").length == 0) {
            clearInterval(intervl);
            jQuery("li.mega-project_own_cats a").children("div.loader").remove();
            jQuery("li.mega-project_own_cats a").removeClass('pending_app');
        }
    }
});



jQuery(function ($) {
    /*$('.sync_app_created #app_step_forms .card_add').card({
     container: '.sync_app_created #app_step_forms .card-wrapper',
     width: 280,
     formSelectors: {
     nameInput: '.first_name, .last_name'
     }
     });
     
     
     $('#card_info .card_add').card({
     container: '#card_info #user_card_info .card-wrapper',
     width: 280,
     formSelectors: {
     nameInput: '.first_name, .last_name'
     }
     });*/
});

//  //Left to slider
jQuery(document).on("click", ".open-sidebar", function (e) {
    jQuery(".switch-sidebar.active").trigger("click");
    if (jQuery(this).hasClass("active")) {
        jQuery("#leftCategorySidebar").removeClass('sidebar-in');
        jQuery("#leftCategorySidebar").removeAttr("style");
        jQuery(this).removeClass("active");
        jQuery(".builder_posts").css({
            'overflow-y': 'scroll',
            'left': '360px'
        });
        jQuery(".builder_posts").hide();

    } else {

        jQuery("#leftCategorySidebar").addClass('sidebar-in');
        jQuery("#leftCategorySidebar").attr("style", "left:60px");
        jQuery(this).addClass("active");
    }

});



jQuery(document).on('click','.copy-input',function(){
    var $temp = jQuery("<input>");
      jQuery("body").append($temp);
      $temp.val(jQuery(this).val()).select();
      document.execCommand("copy");
      $temp.remove();
      var ele = jQuery(this).next('.hovertiptext');
      ele.html('Copied');
      setTimeout(function(){
        ele.html('Click to copy');
      },2000);
});

jQuery(document).on('click','.copy-span',function(){
    var $temp = jQuery("<input>");
      jQuery("body").append($temp);
      $temp.val(jQuery(this).attr('data-text')).select();
      document.execCommand("copy");
      $temp.remove();
      var ele = jQuery(this).next('.hovertiptext');
      ele.html('Copied');
      var elee = jQuery(this).children('.hovertiptext');
      if(elee){
        elee.html('Copied');
      }
      
      setTimeout(function(){
        ele.html('Click to copy');if(elee){elee.html('Click to copy');}
      },2000);
});


jQuery(document).ready(function ($) {
    if($("#freeplanbox").length > 0){
        $("#freeplanbox").hide();
    }


    jQuery(document).on('submit','#divi_licensekey-form',function(e){
        e.preventDefault();
        var ajax_url = bloxx.ajax_url;
       // alert(ajax_url);
        $.ajax({
            type: "POST",
            url: ajax_url,
            dataType: "json",
            data: $("#divi_licensekey-form").serialize(),
            beforeSend: function () {
                $("#divi_licensekey-form #update-divi_licens").prop('disabled', true);
                $("#divi_licensekey-form #update-divi_licens").html('<i class="fa fa-spinner fa-spin"></i>');
                swal.fire({
                    customClass: {
                        container: 'swal2_spinner',
                    },
                    html: '<div class="builder_spinner" id="loadingSpinner"></div>',
                    showConfirmButton: false,
                    onRender: function () {
                        $('.swal2-content').prepend(sweet_loader);
                    }
                });
            },
            success: function (resp) {
                swal.close();
                $("#divi_licensekey-form #update-divi_licens").prop('disabled', false);
                $("#divi_licensekey-form #update-divi_licens").html('Save');

                if (resp.code == 200) {
                    
                    Swal.fire({
                        title: "Success!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: resp.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            },
            error: function () {
                $("#divi_licensekey-form #update-divi_licens").prop('disabled', false);
                $("#divi_licensekey-form #update-divi_licens").html('Save');

                Swal.fire({
                    title: "Error!",
                    text: "Please try again later",
                    confirmButtonColor: '#000',
                    icon: "error"
                });
            }
        });
    });
});


function activateDivi(){
    var username = jQuery("input[name=username]").val();
    var apikey = jQuery("input[name=api_key]").val();
    if(username == '' && apikey == ''){
        jQuery("#divi_activate_modal").show();
        jQuery(".divi-inputs").show();
        jQuery(".divi-btns").hide();
        return false;
    }else{
        
        jQuery(".ac-btn").html('Installing Divi...');
        jQuery("#divi_activate_modal").hide();
        var app_id = jQuery("input[name=divi_app_id]").val();
        var term_id = jQuery("input[name=divi_term_id]").val();
        jQuery.ajax({
            type: "POST",
            url: ajax_url,
            dataType: "json",
            data:{
                username:username,
                apikey:apikey,
                app_id:app_id,
                term_id:term_id,
                action:'install_divitoapp'
            },
            success:function(res){
                jQuery(".ac-btn").html('<img src="'+window.location.origin+'/wp-content/plugins/divi-builder/images/divi-select.png" alt="..." />');
                jQuery(".ac-btn").addClass('active-divi'); 
                jQuery(".divi-btns.c-btn").html('Activate');
                if (res.code == 200) {
                    Swal.fire({
                        title: "Success!",
                        text: res.message,
                        confirmButtonColor: '#000',
                        icon: "success"
                    });
                    jQuery(".ac-btn").removeAttr('onclick');
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: res.message,
                        confirmButtonColor: '#000',
                        icon: "error"
                    });
                }
            }
        });
    }
    
}

function createdivilicense(el){
    jQuery(".divi-inputs").show();
    jQuery(".divi-btns").hide();
}

function installDivi(){
    jQuery("#divi_activate_modal").show();
    jQuery(".divi-inputs").hide();
    jQuery(".divi-btns").show();
}

function upgrade_downgrade_hosting(){
    if(jQuery("input[name=selected_plan]").val() != "" && jQuery("input[name=selected_plan]").val() != jQuery("input[name=current_plan_id]").val()){
        Swal.fire({
            title: 'Are you sure? ',
            text: "Once upgrade you would not be able to downgrade the plan and you need to contact to our support for downgrading",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {                  
                window.location.href = jQuery("input[name=selected_plan]").val();
            }
        });
    }else{
        Swal.fire({
            title: "Error!",
            text: 'You have not changed anything or please select a different plan that current plan.',
            confirmButtonColor: '#000',
            icon: "error"
        });
    }
}

jQuery("a.tabs-tab").on('click',function(){console.log('sdfs');
    jQuery(this).parent().addClass('active').siblings().removeClass('active');
    jQuery(".tabs-content").removeClass('active');
    jQuery(".tabs-content").addClass('hide-all');
    jQuery(jQuery(this).attr('href')).addClass('active');
});


jQuery(document).ready(function($){
    var field = 'tab=apikey';
    var url = window.location.href;
    if(url.indexOf('?' + field) != -1 || url.indexOf('&' + field) != -1){
        $('#card_info_trigger').trigger('click');
    
    }
    //document.getElementById("mega-menu-item-77742").classList.add('disabled');

    $(document).on('click','.secure-check',function(){
        $("a[href=#billing_details]").trigger('click');
    });


    $(document).on("change","#site-favicon",function(){
        $(".loader_load").show();
        var formData = new FormData();
        formData.append('file', $('#site-favicon')[0].files[0]);
        formData.append('site_url', $('#site_url').val());
        var ajax_url = builder.ajax_url;
        $.ajax({
               url : ajax_url+'?action=site_icon',
               type : 'POST',
               data : formData,
               processData: false,  // tell jQuery not to process the data
               contentType: false,  // tell jQuery not to set contentType
               success : function(data) {
                $(".loader_load").hide();
                   if (data == 'success') {
                        Swal.fire({
                            title: "Success!",
                            text: 'Site icon updated',
                            confirmButtonColor: '#000',
                            icon: "success"
                        });
                        jQuery(".ac-btn").hide();
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: 'Something went wrong',
                            confirmButtonColor: '#000',
                            icon: "error"
                        });
                    }
               }
        });
    });
});


